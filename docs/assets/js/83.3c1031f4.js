(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{384:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"performance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance","aria-hidden":"true"}},[s._v("#")]),s._v(" Performance")]),s._v(" "),a("p",[s._v("Flysystem aims to be as reliable as possible. In some cases this means doing extra\nchecks to make sure the outcome will be as expected. For some adapter this means Flysystem\nwill make extra calls to assert whether or not a file exists. This improves the reliability\nbut also impacts performance. You can opt out of this behaviour.")]),s._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("League"),a("span",{attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("Flysystem"),a("span",{attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("Config")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("League"),a("span",{attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("Flysystem"),a("span",{attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("Filesystem")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{attrs:{class:"token variable"}},[s._v("$local")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("Filesystem")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token variable"}},[s._v("$localAdapter")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("Config")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'disable_asserts'")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token boolean"}},[s._v("true")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("This will disable the asserts which happen before the following calls: write, writeStream, update,\nupdateStream, copy (2x), and delete.")]),s._v(" "),a("p",[s._v("This functionality is available since "),a("code",[s._v("1.0.26")]),s._v(".")])])}],!1,null,null,null);t.default=e.exports}}]);