(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{377:function(e,t,r){"use strict";r.r(t);var n=r(0),a=Object(n.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),r("p",[e._v("We'd love you to help out with mockery and no contribution is too small.")]),e._v(" "),e._m(1),e._v(" "),r("p",[e._v("Issues can be reported on the "),r("a",{attrs:{href:"https://github.com/padraic/mockery/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue\ntracker"),r("OutboundLink")],1),e._v(". Please try and report any\nbugs with a minimal reproducible example, it will make things easier for other\ncontributors and your problems will hopefully be resolved quickly.")]),e._v(" "),e._m(2),e._v(" "),r("p",[e._v("We're always interested to hear about your ideas and you can request features by\ncreating a ticket in the "),r("a",{attrs:{href:"https://github.com/padraic/mockery/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue\ntracker"),r("OutboundLink")],1),e._v(". We can't always guarantee\nsomeone will jump on it straight away, but putting it out there to see if anyone\nelse is interested is a good idea.")]),e._v(" "),r("p",[e._v("Likewise, if a feature you would like is already listed in\nthe issue tracker, add a üëç so that other contributors know it's a feature\nthat would help others.")]),e._v(" "),e._m(3),e._v(" "),r("p",[e._v("We loosely follow the\n"),r("a",{attrs:{href:"https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("PSR-1"),r("OutboundLink")],1),e._v("\nand\n"),r("a",{attrs:{href:"https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("PSR-2"),r("OutboundLink")],1),e._v(" coding standards,\nbut we'll probably merge any code that looks close enough.")]),e._v(" "),r("ul",[r("li",[e._v("Fork the "),r("a",{attrs:{href:"https://github.com/padraic/mockery",target:"_blank",rel:"noopener noreferrer"}},[e._v("repository"),r("OutboundLink")],1),e._v(" on GitHub")]),e._v(" "),r("li",[e._v("Add the code for your feature or bug")]),e._v(" "),r("li",[e._v("Add some tests for your feature or bug")]),e._v(" "),r("li",[e._v("Optionally, but preferably, write some documentation")]),e._v(" "),r("li",[e._v("Optionally, update the CHANGELOG.md file with your feature or\n"),r("a",{attrs:{href:"http://en.wikipedia.org/wiki/Backward_compatibility",target:"_blank",rel:"noopener noreferrer"}},[e._v("BC"),r("OutboundLink")],1),e._v(" break")]),e._v(" "),r("li",[e._v("If you have created new library files, add them to the root package.xml file for PEAR install support.")]),e._v(" "),r("li",[e._v("Send a "),r("a",{attrs:{href:"https://help.github.com/articles/creating-a-pull-request",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pull\nRequest"),r("OutboundLink")],1),e._v(" to the\ncorrect target branch (see below)")])]),e._v(" "),r("p",[e._v("If you have a big change or would like to discuss something, create an issue in\nthe "),r("a",{attrs:{href:"https://github.com/padraic/mockery/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue tracker"),r("OutboundLink")],1),e._v(" or jump in to\n#mockery on freenode")]),e._v(" "),r("p",[e._v("Any code you contribute must be licensed under the "),r("a",{attrs:{href:"http://opensource.org/licenses/BSD-3-Clause",target:"_blank",rel:"noopener noreferrer"}},[e._v("BSD 3-Clause\nLicense"),r("OutboundLink")],1),e._v(".")]),e._v(" "),e._m(4),e._v(" "),r("p",[e._v("Mockery may have several active branches at any one time and roughly follows a\n"),r("a",{attrs:{href:"https://igor.io/2013/10/21/git-branching-model.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git Branching Model"),r("OutboundLink")],1),e._v(".\nGenerally, if you're developing a new feature, you want to be targeting the\nmaster branch, if it's a bug fix, you want to be targeting a release branch,\ne.g. 0.8.")]),e._v(" "),e._m(5),e._v(" "),r("p",[e._v("To run the unit tests for Mockery, clone the git repository, download Composer using\nthe instructions at "),r("a",{attrs:{href:"http://getcomposer.org/download/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://getcomposer.org/download/"),r("OutboundLink")],1),e._v(",\nthen install the dependencies with "),r("code",[e._v("php /path/to/composer.phar install --dev")]),e._v(".")]),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"contributing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contributing","aria-hidden":"true"}},[this._v("#")]),this._v(" Contributing")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"reporting-bugs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reporting-bugs","aria-hidden":"true"}},[this._v("#")]),this._v(" Reporting Bugs")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"requesting-features"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#requesting-features","aria-hidden":"true"}},[this._v("#")]),this._v(" Requesting Features")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"contributing-code-and-documentation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contributing-code-and-documentation","aria-hidden":"true"}},[this._v("#")]),this._v(" Contributing code and documentation")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"target-branch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#target-branch","aria-hidden":"true"}},[this._v("#")]),this._v(" Target Branch")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"testing-mockery"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#testing-mockery","aria-hidden":"true"}},[this._v("#")]),this._v(" Testing Mockery")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("This will install the required PHPUnit and Hamcrest dev dependencies and create the\nautoload files required by the unit tests. You may run the "),t("code",[this._v("vendor/bin/phpunit")]),this._v(" command\nto run the unit tests. If everything goes to plan, there will be no failed tests!")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"debugging-mockery"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#debugging-mockery","aria-hidden":"true"}},[this._v("#")]),this._v(" Debugging Mockery")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Mockery and it's code generation can be difficult to debug. A good start is to\nuse the "),t("code",[this._v("RequireLoader")]),this._v(", which will dump the code generated by mockery to a file\nbefore requiring it, rather than using eval. This will help with stack traces,\nand you will be able to open the mock class in your editor.")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"language-php extra-class"},[r("pre",{pre:!0,attrs:{class:"language-php"}},[r("code",[e._v("\n"),r("span",{attrs:{class:"token comment"}},[e._v("// tests/bootstrap.php")]),e._v("\n\nMockery"),r("span",{attrs:{class:"token punctuation"}},[e._v(":")]),r("span",{attrs:{class:"token punctuation"}},[e._v(":")]),r("span",{attrs:{class:"token function"}},[e._v("setLoader")]),r("span",{attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),r("span",{attrs:{class:"token class-name"}},[e._v("Mockery"),r("span",{attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("Loader"),r("span",{attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("RequireLoader")]),r("span",{attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{attrs:{class:"token function"}},[e._v("sys_get_temp_dir")]),r("span",{attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n")])])])}],!1,null,null,null);t.default=a.exports}}]);