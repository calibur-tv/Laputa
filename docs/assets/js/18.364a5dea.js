(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{170:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),a("p",[t._v("有一个问题是：")]),t._v(" "),a("blockquote",[a("p",[t._v("当一个番剧有多个季度的番，第一二季是没有版权的，第三季是有版权的，那么通过"),a("code",[t._v("others_site_video")]),t._v("字段来判断就不行了，因此现在的方案是"),a("a",{attrs:{href:"https://github.com/calibur-tv/Laputa/blob/deploy/app/Api/v1/Repositories/VideoRepository.php#L16",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码"),a("OutboundLink")],1),t._v("：")])]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),a("p",[t._v("主要是通过"),a("code",[t._v("season")]),t._v("里的"),a("code",[t._v("part")]),t._v("和"),a("code",[t._v("re")]),t._v("两个字段一顿算，然后结合"),a("code",[t._v("videos")]),t._v("表里的"),a("code",[t._v("part")]),t._v("得出来的多季度列表，"),a("a",{attrs:{href:"https://github.com/calibur-tv/Laputa/blob/deploy/app/Api/v1/Repositories/BangumiRepository.php#L175",target:"_blank",rel:"noopener noreferrer"}},[t._v("计算的函数"),a("OutboundLink")],1),t._v("\n因为这个视频功能是在演进的，一开始也没有考虑周到，所以导致现在出现的问题是：")]),t._v(" "),t._m(20)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"多季度视频的当前实现方案："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多季度视频的当前实现方案：","aria-hidden":"true"}},[this._v("#")]),this._v(" 多季度视频的当前实现方案：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h5",{attrs:{id:"季度信息的存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#季度信息的存储","aria-hidden":"true"}},[this._v("#")]),this._v(" 季度信息的存储")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[a("code",[t._v("bangumis")]),t._v("表下面有一个"),a("code",[t._v("season")]),t._v("字段，存储的是"),a("code",[t._v("json string")]),t._v("，因为"),a("code",[t._v("MySQL 5.6")]),t._v("不支持存储"),a("code",[t._v("JSON")]),t._v("，所以我们每次读和写的时候都要"),a("code",[t._v("parse")]),t._v("一下\n"),a("code",[t._v("season")]),t._v("字段有如下"),a("code",[t._v("key")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"part"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"<Array> | 每个季度是从哪里开始分割"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"name"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"<Array> | 每个季度的名字"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"time"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"<Array> | 每个季度的上线时间"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"re"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"<Number | Array> 每个季度的集数是否从1开始重排序，默认值 0 不重新排序"')]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("举个例子：\n**《刀剑神域》**的"),s("code",[this._v("season")]),this._v("：")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"name"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"Sword Art Online"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Gun Gale Online"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"序列之争"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('"外传GGO"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('"刀剑神域 Alicization"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  "),a("span",{attrs:{class:"token property"}},[t._v('"part"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("25")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("50")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("51")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("64")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("88")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"time"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"2012.7"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"2014.7"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"2017.2"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('"2018.4"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('"2018.10"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"re"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("season")]),this._v("各字段简介：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ol",[a("li",[t._v("这个字段可为空")]),t._v(" "),a("li",[t._v("part 是多个数组（区间），代表季度的集数，比如第一季是1 ~ 12, 第二季是 13 ~ 24，那么 part = [0, 12, 24]。第一个 0 代表从第一集开始，12 - 0 = 12，24 -12 = 12，代表第一季有12集，第二季有12集")]),t._v(" "),a("li",[t._v("time 和 name 代表该季度的上映日期和名称，如果没有特殊名称，就填写'第一季、第二季'")]),t._v(" "),a("li",[t._v("假设 part 有 N 个，那么 time 和 name 就有 N - 1 个，因此 part 至少是两个")]),t._v(" "),a("li",[t._v("part 必须是升序排列的，从 0 开始，当番剧未完结时，最后一位是 -1")]),t._v(" "),a("li",[t._v("re 代表每个季度之间的集数是否重排，如果是 1 则重拍，如果是 0 或不填则不重排")]),t._v(" "),a("li",[t._v("re 也可以和 name 是一个数组，但它的长度必须和 name 一样，并且每一项都是 0 或 1")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h5",{attrs:{id:"视频信息的存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视频信息的存储","aria-hidden":"true"}},[this._v("#")]),this._v(" 视频信息的存储")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("videos")]),this._v("的三个字段是关键："),s("code",[this._v("part")]),this._v("、"),s("code",[this._v("url")]),this._v("、"),s("code",[this._v("resource")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ol",[a("li",[a("code",[t._v("part")]),t._v(" 就是集数，是一个"),a("code",[t._v("int")]),t._v("型，从 1 开始")]),t._v(" "),a("li",[a("code",[t._v("url")]),t._v(" 是一个字符串，可能为空，存储的是"),a("code",[t._v("站外资源播放地址")]),t._v("，可能是 bilibili 的网页也可能是优酷、爱奇艺的网页")]),t._v(" "),a("li",[a("code",[t._v("resource")]),t._v(" 是一个"),a("code",[t._v("json")]),t._v("，里面存储的大致是如下内容：")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"video"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"720"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"useLyc"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"<Boolean> | 是否使用字幕"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"src"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"<String> | 自建视频的播放地址"')]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"1080"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"与720相同"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"480"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"..."')]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"lyric"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"zh"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"<String> | 中文字幕 url"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"en"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"<String> | 英文字幕 url"')]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("我们一开始打算支持多种画质和外链字幕，但是后来发现有很多问题，比如：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("字幕的格式要求单一，绝大部分的资源提供的字幕格式无法在web网页使用")]),this._v(" "),s("li",[this._v("要去找多重清晰度的资源会增大工作量，因此为了简化工作只去搜集了 720P 资源，部分资源是 1080P 的")]),this._v(" "),s("li",[this._v("如果采用云存储的转码，费用会非常高，并且占用存储，最终的结果并不理想")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("所以结论是：我们只支持"),s("code",[this._v("内嵌字幕")]),this._v("的"),s("code",[this._v("单一画质")]),this._v("视频即可")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h5",{attrs:{id:"如何计算内建资源和版权方播放地址？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何计算内建资源和版权方播放地址？","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何计算内建资源和版权方播放地址？")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[a("code",[t._v("bangumis")]),t._v("表下面还有一个"),a("code",[t._v("others_site_video")]),t._v("字段，这个字段是一开始为了快速切换"),a("code",[t._v("自建")]),t._v("视频和"),a("code",[t._v("版权方视频")]),t._v("而设置的，一开始我们的视频资源还比较少，所以用一个字段控制就行了")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("只要版权方找过来，我们修改这个"),s("code",[this._v("others_site_video")]),this._v("值为"),s("code",[this._v("true")]),this._v("前端根据接口返回的这个字段判断是加载一个视频播放器还是渲染一个"),s("code",[this._v("无版权，点击跳转")]),this._v("的按钮")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ol",[a("li",[t._v("服务端在接口里通过计算，根据"),a("code",[t._v("resource")]),t._v("和"),a("code",[t._v("url")]),t._v("的值最终算出一个"),a("code",[t._v("src")]),t._v("，它可能是空字符串，也可能是外站资源链接，也可能是我们的视频资源。")]),t._v(" "),a("li",[t._v("当"),a("code",[t._v("others_site_video")]),t._v("为"),a("code",[t._v("true")]),t._v("的时候，API 只去读取"),a("code",[t._v("url")]),t._v("的值而不去计算"),a("code",[t._v("resource")]),t._v("内的数据，这样会让"),a("strong",[t._v("整个番剧的所有季度都跳到版权方")])]),t._v(" "),a("li",[t._v("当"),a("code",[t._v("others_site_video")]),t._v("为"),a("code",[t._v("false")]),t._v("的时候，会通过"),a("code",[t._v("url")]),t._v("和"),a("code",[t._v("resource")]),t._v("计算出一个"),a("code",[t._v("src")]),t._v("，并且优先使用我们自己的播放链接，如果我们的播放链接是空，就会回退到版权方的链接")]),t._v(" "),a("li",[t._v("最终如果"),a("code",[t._v("src")]),t._v("返回是空字符串，前端就会展示"),a("code",[t._v("视频消失了")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h5",{attrs:{id:"目前是如何把season-和-part-关联起来的？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目前是如何把season-和-part-关联起来的？","aria-hidden":"true"}},[this._v("#")]),this._v(" 目前是如何把"),s("code",[this._v("season")]),this._v(" 和 "),s("code",[this._v("part")]),this._v(" 关联起来的？")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ol",[a("li",[t._v("通过时间区间来搜索番剧，无法精确到每个季度的时间（"),a("code",[t._v("season")]),t._v("里存储的"),a("code",[t._v("time")]),t._v("不利于索引）")]),t._v(" "),a("li",[t._v("写漫评的时候，无法支持多个季度分开写（是根据"),a("code",[t._v("bangumi_id")]),t._v("和"),a("code",[t._v("user_id")]),t._v("来确认漫评唯一性的）")]),t._v(" "),a("li",[a("code",[t._v("video")]),t._v("的集数无法支持"),a("code",[t._v("0.5")]),t._v("，"),a("code",[t._v("1.6")]),t._v("，"),a("code",[t._v("0")]),t._v("这样的莫名其妙一开始我没想到的集数。。。")]),t._v(" "),a("li",[t._v("另外一点"),a("code",[t._v("part")]),t._v("这样整数话处理的原因是前期我们的视频都是批量上传到七牛云，然后批量写入到数据库里的，所以无法对"),a("code",[t._v("part")]),t._v("做差异化，只能是一个"),a("code",[t._v("for")]),t._v("循环去写入")]),t._v(" "),a("li",[t._v("这里的代码已经很乱了，基本我自己看半天才能想明白，所以"),a("strong",[t._v("建议重写")]),t._v("吧")])])}],!1,null,null,null);s.default=e.exports}}]);