(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{293:function(e,t,n){"use strict";n.r(t);var i=n(0),o=Object(i.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),n("ul",[e._m(3),e._v(" "),e._m(4),e._v(" "),n("li",[n("p",[e._v("Non-boolean string values passed to the "),n("code",[e._v("persistent")]),e._v(" connection parameter can\nbe used to create different persistent connections. Note that this feature was\nalready present in Predis but required both "),n("code",[e._v("persistent")]),e._v(" and "),n("code",[e._v("path")]),e._v(" to be set\nas illustrated by "),n("a",{attrs:{href:"https://github.com/nrk/predis/pull/139",target:"_blank",rel:"noopener noreferrer"}},[e._v("#139"),n("OutboundLink")],1),e._v(". This change\nis needed to prevent confusion with how "),n("code",[e._v("path")]),e._v(" is used to select a database\nwhen using the "),n("code",[e._v("redis")]),e._v(" scheme.")])]),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12)]),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),n("ul",[e._m(18),e._v(" "),n("li",[n("p",[e._v("Added "),n("code",[e._v("redis")]),e._v(" as an accepted scheme for connection parameters. When using this\nscheme, the rules used to parse URI strings match the provisional registration\n"),n("a",{attrs:{href:"http://www.iana.org/assignments/uri-schemes/prov/redis",target:"_blank",rel:"noopener noreferrer"}},[e._v("published by IANA"),n("OutboundLink")],1),e._v(".")])]),e._v(" "),e._m(19),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),e._m(22)]),e._v(" "),e._m(23),e._v(" "),e._m(24),e._v(" "),e._m(25),e._v(" "),e._m(26),e._v(" "),e._m(27),e._v(" "),e._m(28),e._v(" "),e._m(29),e._v(" "),e._m(30),e._v(" "),e._m(31),e._v(" "),e._m(32),e._v(" "),e._m(33),e._v(" "),e._m(34),e._v(" "),e._m(35),e._v(" "),n("ul",[e._m(36),e._v(" "),e._m(37),e._v(" "),e._m(38),e._v(" "),n("li",[n("p",[e._v("Updated the aggregated connection class for redis-cluster to work with 16384\nhash slots instead of 4096 to reflect the recent change from redis unstable\n("),n("a",{attrs:{href:"https://github.com/antirez/redis/commit/ebd666d",target:"_blank",rel:"noopener noreferrer"}},[e._v("see this commit"),n("OutboundLink")],1),e._v(").")])]),e._v(" "),e._m(39),e._v(" "),e._m(40),e._v(" "),e._m(41)]),e._v(" "),e._m(42),e._v(" "),e._m(43),e._v(" "),e._m(44),e._v(" "),e._m(45),e._v(" "),e._m(46),e._v(" "),e._m(47),e._v(" "),e._m(48),e._v(" "),e._m(49),e._v(" "),e._m(50),e._v(" "),e._m(51),e._v(" "),e._m(52),e._v(" "),e._m(53),e._v(" "),e._m(54),e._v(" "),e._m(55),e._v(" "),e._m(56),e._v(" "),e._m(57),e._v(" "),e._m(58),e._v(" "),e._m(59),e._v(" "),e._m(60),e._v(" "),e._m(61),e._v(" "),e._m(62),e._v(" "),e._m(63),e._v(" "),e._m(64),e._v(" "),e._m(65),e._v(" "),e._m(66),e._v(" "),e._m(67),e._v(" "),e._m(68),e._v(" "),e._m(69),e._v(" "),e._m(70),e._v(" "),e._m(71),e._v(" "),e._m(72),e._v(" "),e._m(73),e._v(" "),e._m(74)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v1-1-1-2016-06-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-1-1-2016-06-16","aria-hidden":"true"}},[this._v("#")]),this._v(" v1.1.1 (2016-06-16)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": "),n("code",[e._v("password")]),e._v(" and "),n("code",[e._v("database")]),e._v(" from the global "),n("code",[e._v("parameters")]),e._v(" client option\nwere still being applied to sentinels connections making them fail (sentinels\ndo not understand the "),n("code",[e._v("AUTH")]),e._v(" and "),n("code",[e._v("SELECT")]),e._v(" commands) (PR #346).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": when a sentinel instance reports no sentinel for a service, invoking\n"),n("code",[e._v("connect()")]),e._v(" on the redis-sentinel connection backend should fall back to the\nmaster connection instead of failing (ISSUE #342).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": the two connection backends based on ext-phpiredis has some kind of\nissues with the GC and the internal use of closures as reader callbacks that\nprevented connections going out of scope from being properly collected and the\nunderlying stream or socket resources from being closed and freed. This should\nnot have had any actual effect in real-world scenarios due to the lifecycle of\nPHP scripts, but we fixed it anyway (ISSUE #345).")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v1-1-0-2016-06-02"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-1-0-2016-06-02","aria-hidden":"true"}},[this._v("#")]),this._v(" v1.1.0 (2016-06-02)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("The default server profile for the client now targets Redis 3.2.")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("li",[n("p",[e._v("Responses to the following commands are not casted into booleans anymore, the\noriginal integer value is returned: "),n("code",[e._v("SETNX")]),e._v(", "),n("code",[e._v("MSETNX")]),e._v(", "),n("code",[e._v("SMOVE")]),e._v(", "),n("code",[e._v("SISMEMBER")]),e._v(",\n"),n("code",[e._v("HSET")]),e._v(", "),n("code",[e._v("HSETNX")]),e._v(", "),n("code",[e._v("HEXISTS")]),e._v(", "),n("code",[e._v("PFADD")]),e._v(", "),n("code",[e._v("EXISTS")]),e._v(", "),n("code",[e._v("MOVE")]),e._v(", "),n("code",[e._v("PERSIST")]),e._v(", "),n("code",[e._v("EXPIRE")]),e._v(",\n"),n("code",[e._v("EXPIREAT")]),e._v(", "),n("code",[e._v("RENAMENX")]),e._v(". This change does not have a significant impact unless\nwhen using strict comparisons (=== and !==) the returned value.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("The client throws exceptions when Redis returns any kind of error response to\ninitialization commands (the ones being automatically sent when a connection\nis established, such as "),t("code",[this._v("SELECT")]),this._v(" and "),t("code",[this._v("AUTH")]),this._v(" when database and password are set\nin connection parameters) regardless of the value of the exception option.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("Using "),t("code",[this._v("unix:///path/to/socket")]),this._v(" in URI strings to specify a UNIX domain socket\nfile is now deprecated in favor of the format "),t("code",[this._v("unix:/path/to/socket")]),this._v(" (note the\nlack of the double slash after the scheme) and will not be supported starting\nwith the next major release.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("Implemented full support for redis-sentinel.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("Implemented the ability to specify default connection parameters for aggregate\nconnections with the new "),t("code",[this._v("parameters")]),this._v(" client option. These parameters augment\nthe usual user-supplied connection parameters (but do not take the precedence\nover them) when creating new connections and they are mostly useful when the\nclient is using aggregate connections such as redis-cluster and redis-sentinel\nas these backends can create new connections on the fly based on responses and\nredirections from Redis.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("Redis servers protected by SSL-encrypted connections can be accessed by using\nthe "),t("code",[this._v("tls")]),this._v(" or "),t("code",[this._v("rediss")]),this._v(" scheme in connection parameters along with SSL-specific\noptions in the "),t("code",[this._v("ssl")]),this._v(" parameter (see http://php.net/manual/context.ssl.php).")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[t("code",[this._v("Predis\\Client")]),this._v(" implements "),t("code",[this._v("IteratorAggregate")]),this._v(" making it possible to iterate\nover traversable aggregate connections and get a new client instance for each\nRedis node.")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("li",[n("p",[e._v("Iterating over an instance of "),n("code",[e._v("Predis\\Connection\\Aggregate\\RedisCluster")]),e._v(" will\nreturn all the connections mapped in the slots map instead of just the ones in\nthe pool. This change makes it possible, when the slots map is retrieved from\nRedis, to iterate over all of the master nodes in the cluster. When the use of\n"),n("code",[e._v("CLUSTER SLOTS")]),e._v(" is disabled via the "),n("code",[e._v("useClusterSlots()")]),e._v(" method, the iteration\nreturns only the connections with slots ranges associated in their parameters\nor the ones initialized by "),n("code",[e._v("-MOVED")]),e._v(" responses in order to make the behaviour\nof the iteration consistent between the two modes of operation.")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("li",[n("p",[e._v("Various improvements to "),n("code",[e._v("Predis\\Connection\\Aggregate\\MasterSlaveReplication")]),e._v('\n(the "basic" replication backend, not the new one based on redis-sentinel):')]),e._v(" "),n("ul",[n("li",[n("p",[e._v("When the client is not able to send a read-only command to a slave because\nthe current connection fails or the slave is resyncing ("),n("code",[e._v("-LOADING")]),e._v(" response\nreturned by Redis), the backend discards the failed connection and performs\na new attempt on the next slave. When no other slave is available the master\nserver is used for read-only commands as last resort.")])]),e._v(" "),n("li",[n("p",[e._v("It is possible to discover the current replication configuration on the fly\nby invoking the "),n("code",[e._v("discover()")]),e._v(" method which internally relies on the output of\nthe command "),n("code",[e._v("INFO REPLICATION")]),e._v(" executed against the master server or one of\nthe slaves. The backend can also be configured to do this automatically when\nit fails to reach one of the servers.")])]),e._v(" "),n("li",[n("p",[e._v("Implemented the "),n("code",[e._v("switchToMaster()")]),e._v(" and "),n("code",[e._v("switchToSlave()")]),e._v(" methods to make it\neasier to force a switch to the master server or a random slave when needed.")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v1-0-4-2016-05-30"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-4-2016-05-30","aria-hidden":"true"}},[this._v("#")]),this._v(" v1.0.4 (2016-05-30)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Added new profile for Redis 3.2 with its new commands: "),n("code",[e._v("HSTRLEN")]),e._v(", "),n("code",[e._v("BITFIELD")]),e._v(",\n"),n("code",[e._v("GEOADD")]),e._v(", "),n("code",[e._v("GEOHASH")]),e._v(", "),n("code",[e._v("GEOPOS")]),e._v(", "),n("code",[e._v("GEODIST")]),e._v(", "),n("code",[e._v("GEORADIUS")]),e._v(", "),n("code",[e._v("GEORADIUSBYMEMBER")]),e._v(".\nThe default server profile for Predis is still the one for Redis 3.0 you must\nset the "),n("code",[e._v("profile")]),e._v(" client option to "),n("code",[e._v("3.2")]),e._v(" when initializing the client in order\nto be able to use them when connecting to Redis 3.2.")])]),e._v(" "),n("li",[n("p",[e._v("Various improvements in the handling of redis-cluster:")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("If the connection to a specific node fails when executing a command, the\nclient tries to connect to another node in order to refresh the slots map\nand perform a new attempt to execute the command.")])]),e._v(" "),n("li",[n("p",[e._v("Connections to nodes can be preassigned to non-contiguous slot ranges via\nthe "),n("code",[e._v("slots")]),e._v(" parameter using a comma separator. This is how it looks like\nin practice: "),n("code",[e._v("tcp://127.0.0.1:6379?slots=0-5460,5500-5600,11000")]),e._v(".")])])])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": broken values returned by "),n("code",[e._v("Predis\\Collection\\Iterator\\HashKey")]),e._v(" when\niterating hash keys containing integer fields (PR #330, ISSUE #331).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": prevent failures when "),n("code",[e._v("Predis\\Connection\\StreamConnection")]),e._v(" serializes\ncommands with holes in their arguments (e.g. "),n("code",[e._v("[0 => 'key:0', 2 => 'key:2']")]),e._v(").\nThe same fix has been applied to "),n("code",[e._v("Predis\\Protocol\\Text\\RequestSerializer")]),e._v(".\n(ISSUE #316).")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v1-0-3-2015-07-30"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-3-2015-07-30","aria-hidden":"true"}},[this._v("#")]),this._v(" v1.0.3 (2015-07-30)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("strong",[this._v("FIX")]),this._v(": the previous release introduced a severe regression on HHVM that made\nthe library unable to connect to Redis when using IPv4 addresses. Code running\non the standard PHP interpreter is not affected.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v1-0-2-2015-07-30"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-2-2015-07-30","aria-hidden":"true"}},[this._v("#")]),this._v(" v1.0.2 (2015-07-30)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("IPv6 is now fully supported.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("Added new or missing commands: "),t("code",[this._v("HSTRLEN")]),this._v(" (>= 3.2), "),t("code",[this._v("ZREVRANGEBYLEX")]),this._v(" (>= 2.8)\nand "),t("code",[this._v("MIGRATE")]),this._v(" (>= 2.6).")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("li",[n("p",[e._v("Implemented support for the "),n("code",[e._v("ZADD")]),e._v(" modifiers "),n("code",[e._v("NX|XX")]),e._v(", "),n("code",[e._v("CH")]),e._v(", "),n("code",[e._v("INCR")]),e._v(" (Redis >=\n3.0.2) using the simplified signature where scores and members are passed as\na named array.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[t("strong",[this._v("FIX")]),this._v(": "),t("code",[this._v("Predis\\Configuration\\Options")]),this._v(" must not trigger the autoloader when\noption values are strings (ISSUE #257).")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[t("strong",[this._v("FIX")]),this._v(": "),t("code",[this._v("BITPOS")]),this._v(" was not defined in the key-prefix processor (ISSUE #265) and\nin the replication strategy.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v1-0-1-2015-01-02"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-1-2015-01-02","aria-hidden":"true"}},[this._v("#")]),this._v(" v1.0.1 (2015-01-02)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Added "),n("code",[e._v("BITPOS")]),e._v(" to the server profile for Redis 2.8.")])]),e._v(" "),n("li",[n("p",[e._v("Connection timeout for read/write operations can now be set for UNIX sockets\nwhere the underlying connection uses PHP's stream.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": broken values returned by "),n("code",[e._v("Predis\\Collection\\Iterator\\SortedSetKey")]),e._v("\nwhen iterating sorted set containing integer members (ISSUE #216).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": applied a minor workaround for a bug in old versions of PHP < 5.3.9\naffecting inheritance.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": prevent E_NOTICE warnings when using INFO [section] returns an empty\nresponse due to an unsupported specific set of information requested to Redis.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v1-0-0-2014-08-01"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-0-2014-08-01","aria-hidden":"true"}},[this._v("#")]),this._v(" v1.0.0 (2014-08-01)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Switched to PSR-4 for autoloading.")])]),e._v(" "),n("li",[n("p",[e._v("The default server profile for Redis is "),n("code",[e._v("3.0")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Removed server profile for Redis 1.2.")])]),e._v(" "),n("li",[n("p",[e._v("Added "),n("code",[e._v("SENTINEL")]),e._v(" to the profile for Redis 2.6 and "),n("code",[e._v("PUBSUB")]),e._v(" to the profile for\nRedis 2.8.")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("Predis\\Client")]),e._v(" can now send raw commands using "),n("code",[e._v("Predis\\Client::executeRaw()")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Status responses are returned as instances of "),n("code",[e._v("Predis\\Response\\Status")]),e._v(", for\nexample +OK is not returned as boolean TRUE anymore which is a breaking change\nfor those using strict comparisons. Status responses can be casted to string\nvalues carrying the original payload, so one can do "),n("code",[e._v("$response == 'OK'")]),e._v(" which\nis also more akin to how Redis replies to clients.")])]),e._v(" "),n("li",[n("p",[e._v("Commands "),n("code",[e._v("ZRANGE")]),e._v(", "),n("code",[e._v("ZRANGEBYSCORE")]),e._v(", "),n("code",[e._v("ZREVRANGE")]),e._v(" and "),n("code",[e._v("ZREVRANGEBYSCORE")]),e._v(" using\n"),n("code",[e._v("WITHSCORE")]),e._v(" return a named array of member => score instead of using an array\nof [member, score] elements. Insertion order is preserved anyway due to how\nPHP works internally.")])]),e._v(" "),n("li",[n("p",[e._v("The command "),n("code",[e._v("ZSCAN")]),e._v(" returns a named array of member => score instead of using\nan array of [member, score] elements. Insertion order is preserved anyway due\nto how PHP works internally.")])]),e._v(" "),n("li",[n("p",[e._v("The rules for redis-cluster are now leveraged for empty key tags when using\nclient-side sharding, which means that when one or the first occurrence of {}\nis found in a key it will most likely produce a different hash than previous\nversions of Predis thus leading to a different partitioning in these cases.")])]),e._v(" "),n("li",[n("p",[e._v("Invoking "),n("code",[e._v("Predis\\Client::connect()")]),e._v(" when the underlying connection has been\nalready established does not throw any exception anymore, now the connection\nsimply does not attempt to perform any operation.")])]),e._v(" "),n("li",[n("p",[e._v("Added the "),n("code",[e._v("aggregate")]),e._v(" client option, useful to fully customize how the client\nshould aggregate multiple connections when an array of connection parameters\nis passed to "),n("code",[e._v("Predis\\Client::__construct()")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Dropped support for streamable multibulk responses. Actually we still ship the\niterator response classes just in case anyone would want to build custom stuff\nat a level lower than the client abstraction (our standard and composable text\nprotocol processors still handle them and can be used as an example).")])]),e._v(" "),n("li",[n("p",[e._v("Simplified the implementation of connection parameters by removing method used\nto cast to int / bool / float certain parameters supplied by users. Casting\nvalues, if deemed necessary, should be done by the consumer or you can just\nsubclass "),n("code",[e._v("Predis\\Connection\\Parameters")]),e._v(" and override the "),n("code",[e._v("filter()")]),e._v(" method.")])]),e._v(" "),n("li",[n("p",[e._v("Changed a couple of options for our transaction abstraction:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("exceptions")]),e._v(": overrides the value of the client option with the same name.\nPlease note that it does not affect all the transaction control commands\nsuch as "),n("code",[e._v("MULTI")]),e._v(", "),n("code",[e._v("EXEC")]),e._v(", "),n("code",[e._v("DISCARD")]),e._v(", "),n("code",[e._v("WATCH")]),e._v(" and "),n("code",[e._v("UNWATCH")]),e._v(".")]),e._v(" "),n("li",[n("code",[e._v("on_retry")]),e._v(": this option has been removed.")])])]),e._v(" "),n("li",[n("p",[e._v("Removed pipeline executors, now command pipelines can be easily customized by\nextending the standard "),n("code",[e._v("Predis\\Pipeline\\Pipeline")]),e._v(" class. Accepted options when\ncreating a pipeline using "),n("code",[e._v("Predis\\Client::pipeline()")]),e._v(" are:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("atomic")]),e._v(": returns a pipeline wrapped in a MULTI / EXEC transaction\n(class: "),n("code",[e._v("Predis\\Pipeline\\Atomic")]),e._v(").")]),e._v(" "),n("li",[n("code",[e._v("fire-and-forget")]),e._v(": returns a pipeline that does not read back responses\n(class: "),n("code",[e._v("Predis\\Pipeline\\FireAndForget")]),e._v(").")])])]),e._v(" "),n("li",[n("p",[e._v("Renamed the two base abstract command classes:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("Predis\\Command\\AbstractCommand")]),e._v(" is now "),n("code",[e._v("Predis\\Command\\Command")])]),e._v(" "),n("li",[n("code",[e._v("Predis\\Command\\ScriptedCommand")]),e._v(" is now "),n("code",[e._v("Predis\\Command\\ScriptCommand")])])])]),e._v(" "),n("li",[n("p",[e._v("Dropped "),n("code",[e._v("Predis\\Command\\Command::__toString()")]),e._v(" (see issue #151).")])]),e._v(" "),n("li",[n("p",[e._v("The key prefixing logic has been moved from command classes to the key prefix\nprocessor. Developers can define or override handlers used to prefix keys, but\nthey can also define the needed logic in their command classes by implementing\n"),n("code",[e._v("Predis\\Command\\PrefixableCommandInterface")]),e._v(" just like before.")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("Predis\\PubSub\\DispatcherLoop")]),e._v(" now takes a "),n("code",[e._v("Predis\\PubSub\\Consumer")]),e._v(" instance\nas the sole argument of its constructor instead of "),n("code",[e._v("Predis\\ClientInterface")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("All of the interfaces and classes related to translated Redis response types\nhave been moved in the new "),n("code",[e._v("Predis\\Response")]),e._v(" namespace and most of them have\nbeen renamed to make their fully-qualified name less redundant. Now the base\nresponse interface is "),n("code",[e._v("Predis\\Response\\ResponseInterface")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Renamed interface "),n("code",[e._v("Predis\\Command\\Processor\\CommandProcessorInterface")]),e._v(" to a\nshorter "),n("code",[e._v("Predis\\Command\\Processor\\ProcessorInterface")]),e._v(". Also removed interface\nfor chain processors since it is basically useless.")])]),e._v(" "),n("li",[n("p",[e._v("Renamed "),n("code",[e._v("Predis\\ExecutableContextInterface")]),e._v(" to "),n("code",[e._v("Predis\\ClientContextInterface")]),e._v("\nand augmented it with a couple of required methods since this interface is no\nmore comparable to a basic client as it could be misleading.")])]),e._v(" "),n("li",[n("p",[e._v("The "),n("code",[e._v("Predis\\Option")]),e._v(" namespace is now known as "),n("code",[e._v("Predis\\Configuration")]),e._v(" and have\na fully-reworked "),n("code",[e._v("Options")]),e._v(" class with the ability to lazily initialize values\nusing objects that responds to "),n("code",[e._v("__invoke()")]),e._v(" (not all the kinds of callables)\neven for custom options defined by the user.")])]),e._v(" "),n("li",[n("p",[e._v("Renamed "),n("code",[e._v("Predis\\Connection\\ConnectionInterface::writeCommand()")]),e._v(" into\n"),n("code",[e._v("writeRequest()")]),e._v(" for consistency with its counterpart, "),n("code",[e._v("readResponse()")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Renamed "),n("code",[e._v("Predis\\Connection\\SingleConnectionInterface::pushInitCommand()")]),e._v(" into\n"),n("code",[e._v("addConnectCommand()")]),e._v(" which is more obvious.")])]),e._v(" "),n("li",[n("p",[e._v("Renamed the connection class based on both ext-phpiredis and ext-socket into\n"),n("code",[e._v("Predis\\Connection\\PhpiredisSocketConnection")]),e._v(". The one based on PHP's streams\nis still named "),n("code",[e._v("Predis\\Connection\\PhpiredisStreamConnection")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Renamed the connection factory class to "),n("code",[e._v("Predis\\Connection\\Factory")]),e._v(". Now its\nconstructor does not require anymore a profile instance to create "),n("code",[e._v("AUTH")]),e._v(" and\n"),n("code",[e._v("SELECT")]),e._v(" commands when parameters contain both "),n("code",[e._v("password")]),e._v(" and "),n("code",[e._v("database")]),e._v(". Raw\ncommands will be used instead.")])]),e._v(" "),n("li",[n("p",[e._v("Renamed the connection parameters class to "),n("code",[e._v("Predis\\Connection\\Parameters")]),e._v(". Now\nits constructor accepts only named arrays, but instances can still be created\nusing both URIs or arrays using the static method "),n("code",[e._v("Parameters::create()")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("The profile factory code has been extracted from the abstract Redis profile\nclass and now lives in "),n("code",[e._v("Predis\\Profile\\Factory")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("The "),n("code",[e._v("Predis\\Connection")]),e._v(" namespace has been completely reorganized by renaming\na few classes and interfaces and adding some sub-namespaces.")])]),e._v(" "),n("li",[n("p",[e._v("Most classes and interfaces in the "),n("code",[e._v("Predis\\Protocol")]),e._v(" namespace have been moved\nor renamed while rationalizing the whole API for external protocol processors.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-8-7-2014-08-01"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-8-7-2014-08-01","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.8.7 (2014-08-01)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Added "),n("code",[e._v("3.0")]),e._v(" in the server profiles aliases list for Redis 3.0. "),n("code",[e._v("2.8")]),e._v(" is still\nthe default server profile and "),n("code",[e._v("dev")]),e._v(" still targets Redis 3.0.")])]),e._v(" "),n("li",[n("p",[e._v("Added "),n("code",[e._v("COMMAND")]),e._v(" to the server profile for Redis 2.8.")])]),e._v(" "),n("li",[n("p",[e._v("Switched internally to the "),n("code",[e._v("CLUSTER SLOTS")]),e._v(" command instead of "),n("code",[e._v("CLUSTER NODES")]),e._v("\nto fetch the updated slots map from redis-cluster. This change requires users\nto upgrade Redis nodes to >= 3.0.0b7.")])]),e._v(" "),n("li",[n("p",[e._v("The updated slots map is now fetched automatically from redis-cluster upon the\nfirst "),n("code",[e._v("-MOVED")]),e._v(" response by default. This change makes it possible to feed the\nclient constructor with only a few nodes of the actual cluster composition,\nwithout needing a more complex configuration.")])]),e._v(" "),n("li",[n("p",[e._v("Implemented support for "),n("code",[e._v("PING")]),e._v(" in PUB/SUB loop for Redis >= 3.0.0b8.")])]),e._v(" "),n("li",[n("p",[e._v("The default client-side sharding strategy and the one for redis-cluster now\nshare the same implementations as they follow the same rules. One difference,\naside from the different hashing function used to calculate distribution, is\nin how empty hash tags like {} are treated by redis-cluster.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": the patch applied to fix #180 introduced a regression affecting read/\nwrite timeouts in "),n("code",[e._v("Predis\\Connection\\PhpiredisStreamConnection")]),e._v(". Unfortunately\nthe only possible solution requires PHP 5.4+. On PHP 5.3, read/write timeouts\nwill be ignored from now on.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-8-6-2014-07-15"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-8-6-2014-07-15","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.8.6 (2014-07-15)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Redis 2.8 is now the default server profile as there are no changes that would\nbreak compatibility with previous releases.")])]),e._v(" "),n("li",[n("p",[e._v("Added "),n("code",[e._v("PFADD")]),e._v(", "),n("code",[e._v("PFCOUNT")]),e._v(", "),n("code",[e._v("PFMERGE")]),e._v(" to the server profile for Redis 2.8 for\nhandling the HyperLogLog data structure introduced in Redis 2.8.9.")])]),e._v(" "),n("li",[n("p",[e._v("Added "),n("code",[e._v("ZLEXCOUNT")]),e._v(", "),n("code",[e._v("ZRANGEBYLEX")]),e._v(", "),n("code",[e._v("ZREMRANGEBYLEX")]),e._v(" to the server profile for\nRedis 2.8 for handling lexicographic operations on members of sorted sets.")])]),e._v(" "),n("li",[n("p",[e._v("Added support for key hash tags when using redis-cluster (Redis 3.0.0b1).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": minor tweaks to make Predis compatible with HHVM >= 2.4.0.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": responses to "),n("code",[e._v("INFO")]),e._v(" are now properly parsed and will not break when\nredis sentinel is being used (ISSUE #154).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": added missing support for "),n("code",[e._v("INCRBYFLOAT")]),e._v(" in cluster and replication\nconfigurations (ISSUE #159).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": fix parsing of the output of "),n("code",[e._v("CLUSTER NODES")]),e._v(" to fetch the slots map\nfrom a node when redis-cluster has slaves in its configuration (ISSUE #165).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": prevent a stack overflow when iterating over large Redis collections\nusing our abstraction for cursor-based iterators (ISSUE #182).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": properly discards transactions when the server immediately returns an\nerror response (e.g. -OOM or -ERR on invalid arguments for a command) instead\nof a +QUEUED response (ISSUE #187).")])]),e._v(" "),n("li",[n("p",[e._v("Upgraded to PHPUnit 4.* for the test suite.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-8-5-2014-01-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-8-5-2014-01-16","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.8.5 (2014-01-16)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Added "),n("code",[e._v("2.8")]),e._v(" in the server profiles aliases list for Redis 2.8. "),n("code",[e._v("2.6")]),e._v(" is still\nthe default server profile and "),n("code",[e._v("dev")]),e._v(" now targets Redis 3.0.")])]),e._v(" "),n("li",[n("p",[e._v("Added "),n("code",[e._v("SCAN")]),e._v(", "),n("code",[e._v("SSCAN")]),e._v(", "),n("code",[e._v("ZSCAN")]),e._v(", "),n("code",[e._v("HSCAN")]),e._v(" to the server profile for Redis 2.8.")])]),e._v(" "),n("li",[n("p",[e._v("Implemented PHP iterators for incremental iterations over Redis collections:")]),e._v(" "),n("ul",[n("li",[e._v("keyspace (cursor-based iterator using "),n("code",[e._v("SCAN")]),e._v(")")]),e._v(" "),n("li",[e._v("sets (cursor-based iterator using "),n("code",[e._v("SSCAN")]),e._v(")")]),e._v(" "),n("li",[e._v("sorted sets (cursor-based iterator using "),n("code",[e._v("ZSCAN")]),e._v(")")]),e._v(" "),n("li",[e._v("hashes (cursor-based iterator using "),n("code",[e._v("HSCAN")]),e._v(")")]),e._v(" "),n("li",[e._v("lists (plain iterator using "),n("code",[e._v("LRANGE")]),e._v(")")])])]),e._v(" "),n("li",[n("p",[e._v('It is now possible to execute "raw commands" using '),n("code",[e._v("Predis\\Command\\RawCommand")]),e._v("\nand a variable list of command arguments. Input arguments are not filtered and\nresponses are not parsed, which means arguments must follow the signature of\nthe command as defined by Redis and complex responses are left untouched.")])]),e._v(" "),n("li",[n("p",[e._v("URI parsing for connection parameters has been improved and has slightly less\noverhead when the number of fields in the querystring grows. New features are:")]),e._v(" "),n("ul",[n("li",[e._v('Parsing does not break when value of a field contains one or more "=".')]),e._v(" "),n("li",[e._v("Repeated fieldnames using [] produce an array of values.")]),e._v(" "),n("li",[e._v('Empty or incomplete "key=value" pairs result in an empty string for "key".')])])]),e._v(" "),n("li",[n("p",[e._v("Various improvements and fixes to the redis-cluster connection backend:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("FIX")]),e._v(": the "),n("code",[e._v("ASKING")]),e._v(" command is sent upon -ASK redirections.")]),e._v(" "),n("li",[e._v("An updated slots-map can be fetched from nodes using the "),n("code",[e._v("CLUSTER NODES")]),e._v("\ncommand. By default this is a manual operation but can be enabled to get\nautomatically done upon -MOVED redirections.")]),e._v(" "),n("li",[e._v("It is possible to specify a common set of connection parameters that are\napplied to connections created on the fly upon redirections to nodes not\npart of the initial pool.")])])]),e._v(" "),n("li",[n("p",[e._v("List of deprecated methods:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("Predis\\Client::multiExec()")]),e._v(": superseded by "),n("code",[e._v("Predis\\Client::transaction()")]),e._v("\nand to be removed in the next major release.")]),e._v(" "),n("li",[n("code",[e._v("Predis\\Client::pubSub()")]),e._v(": superseded by "),n("code",[e._v("Predis\\Client::pubSubLoop()")]),e._v(" and\nto be removed in the next major release. This change was needed due to the\nrecently introduced "),n("code",[e._v("PUBSUB")]),e._v(" command in Redis 2.8.")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-8-4-2013-07-27"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-8-4-2013-07-27","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.8.4 (2013-07-27)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Added "),n("code",[e._v("DUMP")]),e._v(" and "),n("code",[e._v("RESTORE")]),e._v(" to the server profile for Redis 2.6.")])]),e._v(" "),n("li",[n("p",[e._v("Connection exceptions now report basic host details in their messages.")])]),e._v(" "),n("li",[n("p",[e._v("Allow "),n("code",[e._v("Predis\\Connection\\PhpiredisConnection")]),e._v(" to use a random IP when a host\nactually has several IPs (ISSUE #116).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": allow "),n("code",[e._v("HMSET")]),e._v(" when using a cluster of Redis nodes with client-side\nsharding or redis-cluster (ISSUE #106).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": set "),n("code",[e._v("WITHSCORES")]),e._v(" modifer for "),n("code",[e._v("ZRANGE")]),e._v(", "),n("code",[e._v("ZREVRANGE")]),e._v(", "),n("code",[e._v("ZRANGEBYSCORE")]),e._v("\nand "),n("code",[e._v("ZREVRANGEBYSCORE")]),e._v(" only when the options array passed to these commands\nhas "),n("code",[e._v("WITHSCORES")]),e._v(" set to "),n("code",[e._v("true")]),e._v(" (ISSUE #107).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": scripted commands falling back from "),n("code",[e._v("EVALSHA")]),e._v(" to "),n("code",[e._v("EVAL")]),e._v(" resulted in\nPHP errors when using a prefixed client (ISSUE #109).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": "),n("code",[e._v("Predis\\PubSub\\DispatcherLoop")]),e._v(" now works properly when using key\nprefixing (ISSUE #114).")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-8-3-2013-02-18"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-8-3-2013-02-18","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.8.3 (2013-02-18)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("Added "),t("code",[this._v("CLIENT SETNAME")]),this._v(" and "),t("code",[this._v("CLIENT GETNAME")]),this._v(" (ISSUE #102).")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("li",[n("p",[e._v("Implemented the "),n("code",[e._v("Predis\\Connection\\PhpiredisStreamConnection")]),e._v(" class using the\n"),n("code",[e._v("phpiredis")]),e._v(" extension like "),n("code",[e._v("Predis\\Connection\\PhpiredisStreamConnection")]),e._v(", but\nwithout requiring the "),n("code",[e._v("socket")]),e._v(" extension since it relies on PHP's streams.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("Added support for the TCP_NODELAY flag via the "),t("code",[this._v("tcp_nodelay")]),this._v(" parameter for\nstream-based connections, namely "),t("code",[this._v("Predis\\Connection\\StreamConnection")]),this._v(" and\n"),t("code",[this._v("Predis\\Connection\\PhpiredisStreamConnection")]),this._v(" (requires PHP >= 5.4.0).")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("The constructor of "),t("code",[this._v("Predis\\Client")]),this._v(" now accepts a callable as first argument\nreturning "),t("code",[this._v("Predis\\Connection\\ConnectionInterface")]),this._v(". Users can create their\nown self-contained strategies to create and set up the underlying connection.")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("li",[n("p",[e._v("Users should return "),n("code",[e._v("0")]),e._v(" from "),n("code",[e._v("Predis\\Command\\ScriptedCommand::getKeysCount()")]),e._v("\ninstead of "),n("code",[e._v("FALSE")]),e._v(" to indicate that all of the arguments of a Lua script must\nbe used to populate "),n("code",[e._v("ARGV[]")]),e._v(". This does not represent a breaking change.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("p",[this._v("The "),t("code",[this._v("Predis\\Helpers")]),this._v(" class has been deprecated and it will be removed in\nfuture releases.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-8-2-2013-02-03"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-8-2-2013-02-03","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.8.2 (2013-02-03)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Added "),n("code",[e._v("Predis\\Session\\SessionHandler")]),e._v(" to make it easy to store PHP sessions\non Redis using Predis. Please note that this class needs either PHP >= 5.4.0\nor a polyfill for PHP's "),n("code",[e._v("SessionHandlerInterface")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Added the ability to get the default value of a client option directly from\n"),n("code",[e._v("Predis\\Option\\ClientOption")]),e._v(" using the "),n("code",[e._v("getDefault()")]),e._v(" method by passing the\noption name or its instance.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": the standard pipeline executor was not using the response parser\nmethods associated to commands to process raw responses (ISSUE #101).")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-8-1-2013-01-19"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-8-1-2013-01-19","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.8.1 (2013-01-19)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("The "),n("code",[e._v("connections")]),e._v(" client option can now accept a callable object returning\nan instance of "),n("code",[e._v("Predis\\Connection\\ConnectionFactoryInterface")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Client options accepting callable objects as factories now pass their actual\ninstance to the callable as the second argument.")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("Predis\\Command\\Processor\\KeyPrefixProcessor")]),e._v(" can now be directly casted to\nstring to obtain the current prefix, useful with string interpolation.")])]),e._v(" "),n("li",[n("p",[e._v("Added an optional callable argument to "),n("code",[e._v("Predis\\Cluster\\Distribution\\HashRing")]),e._v("\nand "),n("code",[e._v("Predis\\Cluster\\Distribution\\KetamaPureRing")]),e._v(" constructor that can be used\nto customize how the distributor should extract the connection hash when\ninitializing the nodes distribution (ISSUE #36).")])]),e._v(" "),n("li",[n("p",[e._v("Correctly handle "),n("code",[e._v("TTL")]),e._v(" and "),n("code",[e._v("PTTL")]),e._v(" returning -2 on non existing keys starting\nwith Redis 2.8.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": a missing use directive in "),n("code",[e._v("Predis\\Transaction\\MultiExecContext")]),e._v("\ncaused PHP errors when Redis did not return "),n("code",[e._v("+QUEUED")]),e._v(" replies to commands\nwhen inside a MULTI / EXEC context.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": the "),n("code",[e._v("parseResponse()")]),e._v(" method implemented for a scripted command was\nignored when retrying to execute a Lua script by falling back to "),n("code",[e._v("EVAL")]),e._v(" after\na "),n("code",[e._v("-NOSCRIPT")]),e._v(" error (ISSUE #94).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": when subclassing "),n("code",[e._v("Predis\\Client")]),e._v(" the "),n("code",[e._v("getClientFor()")]),e._v(" method returns\na new instance of the subclass instead of a new instance of "),n("code",[e._v("Predis\\Client")]),e._v(".")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-8-0-2012-10-23"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-8-0-2012-10-23","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.8.0 (2012-10-23)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("The default server profile for Redis is now "),n("code",[e._v("2.6")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Certain connection parameters have been renamed:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("connection_async")]),e._v(" is now "),n("code",[e._v("async_connect")])]),e._v(" "),n("li",[n("code",[e._v("connection_timeout")]),e._v(" is now "),n("code",[e._v("timeout")])]),e._v(" "),n("li",[n("code",[e._v("connection_persistent")]),e._v(" is now "),n("code",[e._v("persistent")])])])]),e._v(" "),n("li",[n("p",[e._v("The "),n("code",[e._v("throw_errors")]),e._v(" connection parameter has been removed and replaced by the\nnew "),n("code",[e._v("exceptions")]),e._v(" client option since exceptions on "),n("code",[e._v("-ERR")]),e._v(" replies returned by\nRedis are not generated by connection classes anymore but instead are thrown\nby the client class and other abstractions such as pipeline contexts.")])]),e._v(" "),n("li",[n("p",[e._v("Added smart support for redis-cluster (Redis v3.0) in addition to the usual\ncluster implementation that uses client-side sharding.")])]),e._v(" "),n("li",[n("p",[e._v("Various namespaces and classes have been renamed to follow rules inspired by\nthe Symfony2 naming conventions.")])]),e._v(" "),n("li",[n("p",[e._v("The second argument of the constructor of "),n("code",[e._v("Predis\\Client")]),e._v(" does not accept\nstrings or instances of "),n("code",[e._v("Predis\\Profile\\ServerProfileInterface")]),e._v(" anymore.\nTo specify a server profile you must explicitly set "),n("code",[e._v("profile")]),e._v(" in the array\nof client options.")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("Predis\\Command\\ScriptedCommand")]),e._v(" internally relies on "),n("code",[e._v("EVALSHA")]),e._v(" instead of\n"),n("code",[e._v("EVAL")]),e._v(" thus avoiding to send Lua scripts bodies on each request. The client\nautomatically resends the command falling back to "),n("code",[e._v("EVAL")]),e._v(" when Redis returns a\n"),n("code",[e._v("-NOSCRIPT")]),e._v(" error. Automatic fallback to "),n("code",[e._v("EVAL")]),e._v(" does not work with pipelines,\ninside a "),n("code",[e._v("MULTI / EXEC")]),e._v(" context or with plain "),n("code",[e._v("EVALSHA")]),e._v(" commands.")])]),e._v(" "),n("li",[n("p",[e._v("Complex responses are no more parsed by connection classes as they must be\nprocessed by consumer classes using the handler associated to the issued\ncommand. This means that executing commands directly on connections only\nreturns simple Redis types, but nothing changes when using "),n("code",[e._v("Predis\\Client")]),e._v("\nor the provided abstractions for pipelines and transactions.")])]),e._v(" "),n("li",[n("p",[e._v("Iterators for multi-bulk replies now skip the response parsing method of the\ncommand that generated the response and are passed directly to user code.\nPipeline and transaction objects still consume automatically iterators.")])]),e._v(" "),n("li",[n("p",[e._v("Cluster and replication connections now extend a new common interface,\n"),n("code",[e._v("Predis\\Connection\\AggregatedConnectionInterface")]),e._v(".")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("Predis\\Connection\\MasterSlaveReplication")]),e._v(" now uses an external strategy\nclass to handle the logic for checking readable / writable commands and Lua\nscripts.")])]),e._v(" "),n("li",[n("p",[e._v("Command pipelines have been optimized for both speed and code cleanness, but\nat the cost of bringing a breaking change in the signature of the interface\nfor pipeline executors.")])]),e._v(" "),n("li",[n("p",[e._v("Added a new pipeline executor that sends commands wrapped in a MULTI / EXEC\ncontext to make the execution atomic: if a pipeline fails at a certain point\nthen the whole pipeline is discarded.")])]),e._v(" "),n("li",[n("p",[e._v("The key-hashing mechanism for commands is now handled externally and is no\nmore a competence of each command class. This change is neeeded to support\nboth client-side sharding and Redis cluster.")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("Predis\\Options\\Option")]),e._v(" is now abstract, see "),n("code",[e._v("Predis\\Option\\AbstractOption")]),e._v(".")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-7-3-2012-06-01"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-7-3-2012-06-01","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.7.3 (2012-06-01)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("New commands available in the Redis v2.6 profile (dev): "),n("code",[e._v("BITOP")]),e._v(", "),n("code",[e._v("BITCOUNT")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("When the number of keys "),n("code",[e._v("Predis\\Commands\\ScriptedCommand")]),e._v(" is negative, Predis\nwill count from the end of the arguments list to calculate the actual number\nof keys that will be interpreted as elements for "),n("code",[e._v("KEYS")]),e._v(" by the underlying\n"),n("code",[e._v("EVAL")]),e._v(" command.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": "),n("code",[e._v("examples\\CustomDistributionStrategy.php")]),e._v(" had a mistyped constructor\ncall and produced a bad distribution due to an error as pointed in ISSUE #63.\nThis bug is limited to the above mentioned example and does not affect the\nclasses implemented in the "),n("code",[e._v("Predis\\Distribution")]),e._v(" namespace.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": "),n("code",[e._v("Predis\\Commands\\ServerEvalSHA::getScriptHash()")]),e._v(" was calculating the\nhash while it just needs to return the first argument of the command.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": "),n("code",[e._v("Predis\\Autoloader")]),e._v(" has been modified to allow cascading autoloaders\nfor the "),n("code",[e._v("Predis")]),e._v(" namespace.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-7-2-2012-04-01"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-7-2-2012-04-01","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.7.2 (2012-04-01)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Added "),n("code",[e._v("2.6")]),e._v(" in the server profiles aliases list for the upcoming Redis 2.6.\n"),n("code",[e._v("2.4")]),e._v(" is still the default server profile. "),n("code",[e._v("dev")]),e._v(" now targets Redis 2.8.")])]),e._v(" "),n("li",[n("p",[e._v("Connection instances can be serialized and unserialized using "),n("code",[e._v("serialize()")]),e._v("\nand "),n("code",[e._v("unserialize()")]),e._v(". This is handy in certain scenarios such as client-side\nclustering or replication to lower the overhead of initializing a connection\nobject with many sub-connections since unserializing them can be up to 5x\ntimes faster.")])]),e._v(" "),n("li",[n("p",[e._v("Reworked the default autoloader to make it faster. It is also possible to\nprepend it in PHP's autoload stack.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": fixed parsing of the payload returned by "),n("code",[e._v("MONITOR")]),e._v(" with Redis 2.6.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-7-1-2011-12-27"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-7-1-2011-12-27","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.7.1 (2011-12-27)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("The PEAR channel on PearHub has been deprecated in favour of "),n("code",[e._v("pear.nrk.io")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Miscellaneous minor fixes.")])]),e._v(" "),n("li",[n("p",[e._v("Added transparent support for master / slave replication configurations where\nwrite operations are performed on the master server and read operations are\nrouted to one of the slaves. Please refer to ISSUE #21 for a bit of history\nand more details about replication support in Predis.")])]),e._v(" "),n("li",[n("p",[e._v("The "),n("code",[e._v("profile")]),e._v(" client option now accepts a callable object used to initialize\na new instance of "),n("code",[e._v("Predis\\Profiles\\IServerProfile")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Exposed a method for MULTI / EXEC contexts that adds the ability to execute\ninstances of Redis commands against transaction objects.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-7-0-2011-12-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-7-0-2011-12-11","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.7.0 (2011-12-11)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Predis now adheres to the PSR-0 standard which means that there is no more a\nsingle file holding all the classes of the library, but multiple files (one\nfor each class). You can use any PSR-0 compatible autoloader to load Predis\nor just leverage the default one shipped with the library by requiring the\n"),n("code",[e._v("Predis/Autoloader.php")]),e._v(" and call "),n("code",[e._v("Predis\\Autoloader::register()")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("The default server profile for Redis is now 2.4. The "),n("code",[e._v("dev")]),e._v(" profile supports\nall the features of Redis 2.6 (currently unstable) such as Lua scripting.")])]),e._v(" "),n("li",[n("p",[e._v("Support for long aliases (method names) for Redis commands has been dropped.")])]),e._v(" "),n("li",[n("p",[e._v("Redis 1.0 is no more supported. From now on Predis will use only the unified\nprotocol to serialize commands.")])]),e._v(" "),n("li",[n("p",[e._v("It is possible to prefix keys transparently on a client-level basis with the\nnew "),n("code",[e._v("prefix")]),e._v(" client option.")])]),e._v(" "),n("li",[n("p",[e._v("An external connection factory is used to initialize new connection instances\nand developers can now register their own connection classes using the new\n"),n("code",[e._v("connections")]),e._v(" client option.")])]),e._v(" "),n("li",[n("p",[e._v("It is possible to connect locally to Redis using UNIX domain sockets. Just\nuse "),n("code",[e._v("unix:///path/to/redis.sock")]),e._v(" or a named array just like in the following\nexample: "),n("code",[e._v("array('scheme' => 'unix', 'path' => '/path/to/redis.sock');")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("If the "),n("code",[e._v("phpiredis")]),e._v(" extension is loaded by PHP, it is now possible to use an\nalternative connection class that leverages it to make Predis faster on many\ncases, especially when dealing with big multibulk replies, with the the only\ndownside that persistent connections are not supported. Please refer to the\ndocumentation to see how to activate this class using the new "),n("code",[e._v("connections")]),e._v("\nclient option.")])]),e._v(" "),n("li",[n("p",[e._v("Predis is capable to talk with Webdis, albeit with some limitations such as\nthe lack of pipelining and transactions, just by using the "),n("code",[e._v("http")]),e._v(" scheme in\nin the connection parameters. All is needed is PHP with the "),n("code",[e._v("curl")]),e._v(" and the\n"),n("code",[e._v("phpiredis")]),e._v(" extensions loaded.")])]),e._v(" "),n("li",[n("p",[e._v("Way too many changes in the public API to make a list here, we just tried to\nmake all the Redis commands compatible with previous releases of v0.6 so that\nyou do not have to worry if you are simply using Predis as a client. Probably\nthe only breaking changes that should be mentioned here are:")]),e._v(" "),n("ul",[n("li",[n("p",[n("code",[e._v("throw_on_error")]),e._v(" has been renamed to "),n("code",[e._v("throw_errors")]),e._v(" and it is a connection\nparameter instead of a client option, along with "),n("code",[e._v("iterable_multibulk")]),e._v(".")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("key_distribution")]),e._v(" has been removed from the client options. To customize\nthe distribution strategy you must provide a callable object to the new\n"),n("code",[e._v("cluster")]),e._v(" client option to configure and then return a new instance of\n"),n("code",[e._v("Predis\\Network\\IConnectionCluster")]),e._v(".")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("Predis\\Client::create()")]),e._v(" has been removed. Just use the constructor to set\nup a new instance of "),n("code",[e._v("Predis\\Client")]),e._v(".")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("Predis\\Client::pipelineSafe()")]),e._v(" was deprecated in Predis v0.6.1 and now has\nfinally removed. Use "),n("code",[e._v("Predis\\Client::pipeline(array('safe' => true))")]),e._v(".")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("Predis\\Client::rawCommand()")]),e._v(" has been removed due to inconsistencies with\nthe underlying connection abstractions. You can still get the raw resource\nout of a connection with "),n("code",[e._v("Predis\\Network\\IConnectionSingle::getResource()")]),e._v("\nso that you can talk directly with Redis.")])])])]),e._v(" "),n("li",[n("p",[e._v("The "),n("code",[e._v("Predis\\MultiBulkCommand")]),e._v(" class has been merged into "),n("code",[e._v("Predis\\Command")]),e._v(" and\nthus removed. Serialization of commands is now a competence of connections.")])]),e._v(" "),n("li",[n("p",[e._v("The "),n("code",[e._v("Predis\\IConnection")]),e._v(" interface has been splitted into two new interfaces:\n"),n("code",[e._v("Predis\\Network\\IConnectionSingle")]),e._v(" and "),n("code",[e._v("Predis\\Network\\IConnectionCluster")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("The constructor of "),n("code",[e._v("Predis\\Client")]),e._v(" now accepts more type of arguments such as\ninstances of "),n("code",[e._v("Predis\\IConnectionParameters")]),e._v(" and "),n("code",[e._v("Predis\\Network\\IConnection")]),e._v(".")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-6-6-2011-04-01"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-6-6-2011-04-01","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.6.6 (2011-04-01)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Switched to Redis 2.2 as the default server profile (there are no changes\nthat would break compatibility with previous releases). Long command names\nare no more supported by default but if you need them you can still require\n"),n("code",[e._v("Predis_Compatibility.php")]),e._v(" to avoid breaking compatibility.")])]),e._v(" "),n("li",[n("p",[e._v("Added a "),n("code",[e._v("VERSION")]),e._v(" constant to "),n("code",[e._v("Predis\\Client")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("Some performance improvements for multibulk replies (parsing them is about\n16% faster than the previous version). A few core classes have been heavily\noptimized to reduce overhead when creating new instances.")])]),e._v(" "),n("li",[n("p",[e._v("Predis now uses by default a new protocol reader, more lightweight and\nfaster than the default handler-based one. Users can revert to the old\nprotocol reader with the "),n("code",[e._v("reader")]),e._v(" client option set to "),n("code",[e._v("composable")]),e._v(".\nThis client option can also accept custom reader classes implementing the\nnew "),n("code",[e._v("Predis\\IResponseReader")]),e._v(" interface.")])]),e._v(" "),n("li",[n("p",[e._v("Added support for connecting to Redis using UNIX domain sockets (ISSUE #25).")])]),e._v(" "),n("li",[n("p",[e._v("The "),n("code",[e._v("read_write_timeout")]),e._v(" connection parameter can now be set to 0 or false\nto disable read and write timeouts on connections. The old behaviour of -1\nis still intact.")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("ZUNIONSTORE")]),e._v(" and "),n("code",[e._v("ZINTERSTORE")]),e._v(" can accept an array to specify a list of the\nsource keys to be used to populate the destination key.")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("MGET")]),e._v(", "),n("code",[e._v("SINTER")]),e._v(", "),n("code",[e._v("SUNION")]),e._v(" and "),n("code",[e._v("SDIFF")]),e._v(" can accept an array to specify a list\nof keys. "),n("code",[e._v("SINTERSTORE")]),e._v(", "),n("code",[e._v("SUNIONSTORE")]),e._v(" and "),n("code",[e._v("SDIFFSTORE")]),e._v(" can also accept an\narray to specify the list of source keys.")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("SUBSCRIBE")]),e._v(" and "),n("code",[e._v("PSUBSCRIBE")]),e._v(" can accept a list of channels for subscription.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": some client-side clean-ups for "),n("code",[e._v("MULTI/EXEC")]),e._v(" were handled incorrectly\nin a couple of corner cases (ISSUE #27).")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-6-5-2011-02-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-6-5-2011-02-12","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.6.5 (2011-02-12)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("strong",[this._v("FIX")]),this._v(": due to an untested internal change introduced in v0.6.4, a wrong\nhandling of bulk reads of zero-length values was producing protocol\ndesynchronization errors (ISSUE #20).")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-6-4-2011-02-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-6-4-2011-02-12","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.6.4 (2011-02-12)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Various performance improvements (15% ~ 25%) especially when dealing with\nlong multibulk replies or when using clustered connections.")])]),e._v(" "),n("li",[n("p",[e._v("Added the "),n("code",[e._v("on_retry")]),e._v(" option to "),n("code",[e._v("Predis\\MultiExecBlock")]),e._v(" that can be used to\nspecify an external callback (or any callable object) that gets invoked\nwhenever a transaction is aborted by the server.")])]),e._v(" "),n("li",[n("p",[e._v("Added inline (p)subscribtion via options when initializing an instance of\n"),n("code",[e._v("Predis\\PubSubContext")]),e._v(".")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-6-3-2011-01-01"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-6-3-2011-01-01","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.6.3 (2011-01-01)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("New commands available in the Redis v2.2 profile (dev):")]),e._v(" "),n("ul",[n("li",[e._v("Strings: "),n("code",[e._v("SETRANGE")]),e._v(", "),n("code",[e._v("GETRANGE")]),e._v(", "),n("code",[e._v("SETBIT")]),e._v(", "),n("code",[e._v("GETBIT")])]),e._v(" "),n("li",[e._v("Lists  : "),n("code",[e._v("BRPOPLPUSH")])])])]),e._v(" "),n("li",[n("p",[e._v("The abstraction for "),n("code",[e._v("MULTI/EXEC")]),e._v(" transactions has been dramatically improved\nby providing support for check-and-set (CAS) operations when using Redis >=\n2.2. Aborted transactions can also be optionally replayed in automatic up\nto a user-defined number of times, after which a "),n("code",[e._v("Predis\\AbortedMultiExec")]),e._v("\nexception is thrown.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-6-2-2010-11-28"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-6-2-2010-11-28","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.6.2 (2010-11-28)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Minor internal improvements and clean ups.")])]),e._v(" "),n("li",[n("p",[e._v("New commands available in the Redis v2.2 profile (dev):")]),e._v(" "),n("ul",[n("li",[e._v("Strings: "),n("code",[e._v("STRLEN")])]),e._v(" "),n("li",[e._v("Lists  : "),n("code",[e._v("LINSERT")]),e._v(", "),n("code",[e._v("RPUSHX")]),e._v(", "),n("code",[e._v("LPUSHX")])]),e._v(" "),n("li",[e._v("ZSets  : "),n("code",[e._v("ZREVRANGEBYSCORE")])]),e._v(" "),n("li",[e._v("Misc.  : "),n("code",[e._v("PERSIST")])])])]),e._v(" "),n("li",[n("p",[e._v("WATCH also accepts a single array parameter with the keys that should be\nmonitored during a transaction.")])]),e._v(" "),n("li",[n("p",[e._v("Improved the behaviour of "),n("code",[e._v("Predis\\MultiExecBlock")]),e._v(" in certain corner cases.")])]),e._v(" "),n("li",[n("p",[e._v("Improved parameters checking for the SORT command.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": the "),n("code",[e._v("STORE")]),e._v(" parameter for the "),n("code",[e._v("SORT")]),e._v(" command didn't work correctly\nwhen using "),n("code",[e._v("0")]),e._v(" as the target key (ISSUE #13).")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": the methods for "),n("code",[e._v("UNWATCH")]),e._v(" and "),n("code",[e._v("DISCARD")]),e._v(" do not break anymore method\nchaining with "),n("code",[e._v("Predis\\MultiExecBlock")]),e._v(".")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-6-1-2010-07-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-6-1-2010-07-11","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.6.1 (2010-07-11)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Minor internal improvements and clean ups.")])]),e._v(" "),n("li",[n("p",[e._v("New commands available in the Redis v2.2 profile (dev):")]),e._v(" "),n("ul",[n("li",[e._v("Misc.  : "),n("code",[e._v("WATCH")]),e._v(", "),n("code",[e._v("UNWATCH")])])])]),e._v(" "),n("li",[n("p",[e._v("Optional modifiers for "),n("code",[e._v("ZRANGE")]),e._v(", "),n("code",[e._v("ZREVRANGE")]),e._v(" and "),n("code",[e._v("ZRANGEBYSCORE")]),e._v(" queries are\nsupported using an associative array passed as the last argument of their\nrespective methods.")])]),e._v(" "),n("li",[n("p",[e._v("The "),n("code",[e._v("LIMIT")]),e._v(" modifier for "),n("code",[e._v("ZRANGEBYSCORE")]),e._v(" can be specified using either:")]),e._v(" "),n("ul",[n("li",[e._v("an indexed array: "),n("code",[e._v("array($offset, $count)")])]),e._v(" "),n("li",[e._v("an associative array: "),n("code",[e._v("array('offset' => $offset, 'count' => $count)")])])])]),e._v(" "),n("li",[n("p",[e._v("The method "),n("code",[e._v("Predis\\Client::__construct()")]),e._v(" now accepts also instances of\n"),n("code",[e._v("Predis\\ConnectionParameters")]),e._v(".")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("Predis\\MultiExecBlock")]),e._v(" and "),n("code",[e._v("Predis\\PubSubContext")]),e._v(" now throw an exception\nwhen trying to create their instances using a profile that does not\nsupport the required Redis commands or when the client is connected to\na cluster of connections.")])]),e._v(" "),n("li",[n("p",[e._v("Various improvements to "),n("code",[e._v("Predis\\MultiExecBlock")]),e._v(":")]),e._v(" "),n("ul",[n("li",[e._v("fixes and more consistent behaviour across various usage cases.")]),e._v(" "),n("li",[e._v("support for "),n("code",[e._v("WATCH")]),e._v(" and "),n("code",[e._v("UNWATCH")]),e._v(" when using the current development\nprofile (Redis v2.2) and aborted transactions.")])])]),e._v(" "),n("li",[n("p",[e._v("New signature for "),n("code",[e._v("Predis\\Client::multiExec()")]),e._v(" which is now able to accept\nan array of options for the underlying instance of "),n("code",[e._v("Predis\\MultiExecBlock")]),e._v(".\nBackwards compatibility with previous releases of Predis is ensured.")])]),e._v(" "),n("li",[n("p",[e._v("New signature for "),n("code",[e._v("Predis\\Client::pipeline()")]),e._v(" which is now able to accept\nan array of options for the underlying instance of Predis\\CommandPipeline.\nBackwards compatibility with previous releases of Predis is ensured.\nThe method "),n("code",[e._v("Predis\\Client::pipelineSafe()")]),e._v(" is to be considered deprecated.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": The "),n("code",[e._v("WEIGHT")]),e._v(" modifier for "),n("code",[e._v("ZUNIONSTORE")]),e._v(" and "),n("code",[e._v("ZINTERSTORE")]),e._v(" was\nhandled incorrectly with more than two weights specified.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-6-0-2010-05-24"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-6-0-2010-05-24","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.6.0 (2010-05-24)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[e._v("Switched to the new multi-bulk request protocol for all of the commands\nin the Redis 1.2 and Redis 2.0 profiles. Inline and bulk requests are now\ndeprecated as they will be removed in future releases of Redis.")])]),e._v(" "),n("li",[n("p",[e._v("The default server profile is "),n("code",[e._v("2.0")]),e._v(" (targeting Redis 2.0.x). If you are\nusing older versions of Redis, it is highly recommended that you specify\nwhich server profile the client should use (e.g. "),n("code",[e._v("1.2")]),e._v(" when connecting\nto instances of Redis 1.2.x).")])]),e._v(" "),n("li",[n("p",[e._v("Support for Redis 1.0 is now optional and it is provided by requiring\n'Predis_Compatibility.php' before creating an instance of "),n("code",[e._v("Predis\\Client")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("New commands added to the Redis 2.0 profile since Predis 0.5.1:")]),e._v(" "),n("ul",[n("li",[e._v("Strings: "),n("code",[e._v("SETEX")]),e._v(", "),n("code",[e._v("APPEND")]),e._v(", "),n("code",[e._v("SUBSTR")])]),e._v(" "),n("li",[e._v("ZSets  : "),n("code",[e._v("ZCOUNT")]),e._v(", "),n("code",[e._v("ZRANK")]),e._v(", "),n("code",[e._v("ZUNIONSTORE")]),e._v(", "),n("code",[e._v("ZINTERSTORE")]),e._v(", "),n("code",[e._v("ZREMBYRANK")]),e._v(",\n"),n("code",[e._v("ZREVRANK")])]),e._v(" "),n("li",[e._v("Hashes : "),n("code",[e._v("HSET")]),e._v(", "),n("code",[e._v("HSETNX")]),e._v(", "),n("code",[e._v("HMSET")]),e._v(", "),n("code",[e._v("HINCRBY")]),e._v(", "),n("code",[e._v("HGET")]),e._v(", "),n("code",[e._v("HMGET")]),e._v(", "),n("code",[e._v("HDEL")]),e._v(",\n"),n("code",[e._v("HEXISTS")]),e._v(", "),n("code",[e._v("HLEN")]),e._v(", "),n("code",[e._v("HKEYS")]),e._v(", "),n("code",[e._v("HVALS")]),e._v(", "),n("code",[e._v("HGETALL")])]),e._v(" "),n("li",[e._v("PubSub : "),n("code",[e._v("PUBLISH")]),e._v(", "),n("code",[e._v("SUBSCRIBE")]),e._v(", "),n("code",[e._v("UNSUBSCRIBE")])]),e._v(" "),n("li",[e._v("Misc.  : "),n("code",[e._v("DISCARD")]),e._v(", "),n("code",[e._v("CONFIG")])])])]),e._v(" "),n("li",[n("p",[e._v("Introduced client-level options with the new "),n("code",[e._v("Predis\\ClientOptions")]),e._v(" class.\nOptions can be passed to the constructor of "),n("code",[e._v("Predis\\Client")]),e._v(" in its second\nargument as an array or an instance of "),n("code",[e._v("Predis\\ClientOptions")]),e._v(". For brevity's\nsake and compatibility with older versions, the constructor still accepts\nan instance of "),n("code",[e._v("Predis\\RedisServerProfile")]),e._v(" in its second argument. The\ncurrently supported client options are:")]),e._v(" "),n("ul",[n("li",[n("p",[n("code",[e._v("profile")]),e._v(" [default: "),n("code",[e._v("2.0")]),e._v(" as of Predis 0.6.0]: specifies which server\nprofile to use when connecting to Redis. This option accepts an instance\nof "),n("code",[e._v("Predis\\RedisServerProfile")]),e._v(" or a string that indicates the version.")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("key_distribution")]),e._v(" [default: "),n("code",[e._v("Predis\\Distribution\\HashRing")]),e._v("]: specifies\nwhich key distribution strategy to use to distribute keys among the\nservers that compose a cluster. This option accepts an instance of\n"),n("code",[e._v("Predis\\Distribution\\IDistributionStrategy")]),e._v(" so that users can implement\ntheir own key distribution strategy. "),n("code",[e._v("Predis\\Distribution\\KetamaPureRing")]),e._v("\nis an alternative distribution strategy providing a pure-PHP implementation\nof the same algorithm used by libketama.")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("throw_on_error")]),e._v(" [default: "),n("code",[e._v("TRUE")]),e._v(']: server errors can optionally be handled\n"silently": instead of throwing an exception, the client returns an error\nresponse type.')])]),e._v(" "),n("li",[n("p",[n("code",[e._v("iterable_multibulk")]),e._v(" [EXPERIMENTAL - default: "),n("code",[e._v("FALSE")]),e._v("]: in addition to the\nclassic way of fetching a whole multibulk reply into an array, the client\ncan now optionally stream a multibulk reply down to the user code by using\nPHP iterators. It is just a little bit slower, but it can save a lot of\nmemory in certain scenarios.")])])])]),e._v(" "),n("li",[n("p",[e._v("New parameters for connections:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("alias")]),e._v(" [default: not set]: every connection can now be identified by an\nalias that is useful to get a specific connections when connected to a\ncluster of Redis servers.")]),e._v(" "),n("li",[n("code",[e._v("weight")]),e._v(" [default: not set]: allows to balance keys asymmetrically across\nmultiple servers. This is useful when you have servers with different\namounts of memory to distribute the load of your keys accordingly.")]),e._v(" "),n("li",[n("code",[e._v("connection_async")]),e._v(" [default: "),n("code",[e._v("FALSE")]),e._v("]: estabilish connections to servers\nin a non-blocking way, so that the client is not blocked while the socket\nresource performs the actual connection.")]),e._v(" "),n("li",[n("code",[e._v("connection_persistent")]),e._v(" [default: "),n("code",[e._v("FALSE")]),e._v("]: the underlying socket resource\nis left open when a script ends its lifecycle. Persistent connections can\nlead to unpredictable or strange behaviours, so they should be used with\nextreme care.")])])]),e._v(" "),n("li",[n("p",[e._v("Introduced the "),n("code",[e._v("Predis\\Pipeline\\IPipelineExecutor")]),e._v(" interface. Classes that\nimplements this interface are used internally by the "),n("code",[e._v("Predis\\CommandPipeline")]),e._v("\nclass to change the behaviour of the pipeline when writing/reading commands\nfrom one or multiple servers. Here is the list of the default executors:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("Predis\\Pipeline\\StandardExecutor")]),e._v(": exceptions generated by server errors\nmight be thrown depending on the options passed to the client (see the\n"),n("code",[e._v("throw_on_error")]),e._v(" client option). Instead, protocol or network errors always\nthrow exceptions. This is the default executor for single and clustered\nconnections and shares the same behaviour of Predis 0.5.x.")]),e._v(" "),n("li",[n("code",[e._v("Predis\\Pipeline\\SafeExecutor")]),e._v(": exceptions generated by server, protocol\nor network errors are not thrown but returned in the response array as\ninstances of "),n("code",[e._v("Predis\\ResponseError")]),e._v(" or "),n("code",[e._v("Predis\\CommunicationException")]),e._v(".")]),e._v(" "),n("li",[n("code",[e._v("Predis\\Pipeline\\SafeClusterExecutor")]),e._v(": this executor shares the same\nbehaviour of "),n("code",[e._v("Predis\\Pipeline\\SafeExecutor")]),e._v(" but it is geared towards\nclustered connections.")])])]),e._v(" "),n("li",[n("p",[e._v("Support for PUB/SUB is handled by the new "),n("code",[e._v("Predis\\PubSubContext")]),e._v(" class, which\ncould also be used to build a callback dispatcher for PUB/SUB scenarios.")])]),e._v(" "),n("li",[n("p",[e._v("When connected to a cluster of connections, it is now possible to get a\nnew "),n("code",[e._v("Predis\\Client")]),e._v(" instance for a single connection of the cluster by\npassing its alias/index to the new "),n("code",[e._v("Predis\\Client::getClientFor()")]),e._v(" method.")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("Predis\\CommandPipeline")]),e._v(" and "),n("code",[e._v("Predis\\MultiExecBlock")]),e._v(" return their instances\nwhen invokink commands, thus allowing method chaining in pipelines and\nmulti-exec blocks.")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("Predis\\MultiExecBlock")]),e._v(" can handle the new "),n("code",[e._v("DISCARD")]),e._v(" command.")])]),e._v(" "),n("li",[n("p",[e._v("Connections now support float values for the "),n("code",[e._v("connection_timeout")]),e._v(" parameter\nto express timeouts with a microsecond resolution.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": TCP connections now respect the read/write timeout parameter when\nreading the payload of server responses. Previously, "),n("code",[e._v("stream_get_contents()")]),e._v("\nwas being used internally to read data from a connection but it looks like\nPHP does not honour the specified timeout for socket streams when inside\nthis function.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("FIX")]),e._v(": The "),n("code",[e._v("GET")]),e._v(" parameter for the "),n("code",[e._v("SORT")]),e._v(" command now accepts also multiple\nkey patterns by passing an array of strings. (ISSUE #1).")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("strong",[this._v("FIX")]),this._v(": Replies to the "),t("code",[this._v("DEL")]),this._v(" command return the number of elements deleted\nby the server and not 0 or 1 interpreted as a boolean response. (ISSUE #4).")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-5-1-2010-01-23"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-5-1-2010-01-23","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.5.1 (2010-01-23)")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[n("code",[e._v("RPOPLPUSH")]),e._v(" has been changed from bulk command to inline command in Redis\n1.2.1, so "),n("code",[e._v("ListPopLastPushHead")]),e._v(" now extends "),n("code",[e._v("InlineCommand")]),e._v(". The old behavior\nis still available via the "),n("code",[e._v("ListPopLastPushHeadBulk")]),e._v(" class so that you can\noverride the server profile if you need the old (and uncorrect) behaviour\nwhen connecting to a Redis 1.2.0 instance.")])]),e._v(" "),n("li",[n("p",[e._v("Added missing support for "),n("code",[e._v("BGREWRITEAOF")]),e._v(" for Redis >= 1.2.0.")])]),e._v(" "),n("li",[n("p",[e._v("Implemented a factory method for the "),n("code",[e._v("RedisServerProfile")]),e._v(" class to ease the\ncreation of new server profile instances based on a version string.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"v0-5-0-2010-01-09"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-5-0-2010-01-09","aria-hidden":"true"}},[this._v("#")]),this._v(" v0.5.0 (2010-01-09)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("First versioned release of Predis")])])}],!1,null,null,null);t.default=o.exports}}]);