(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{351:function(t,n,a){"use strict";a.r(n);var s=a(0),r=Object(s.a)({},function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[a("a",{attrs:{href:"https://travis-ci.org/nikic/PHP-Parser",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://travis-ci.org/nikic/PHP-Parser.svg?branch=master",alt:"Build Status"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://coveralls.io/github/nikic/PHP-Parser?branch=master",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://coveralls.io/repos/github/nikic/PHP-Parser/badge.svg?branch=master",alt:"Coverage Status"}}),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("This is a PHP 5.2 to PHP 7.1 parser written in PHP. Its purpose is to simplify static code analysis and\nmanipulation.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/nikic/PHP-Parser/tree/master/doc",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Documentation for version 3.x")]),a("OutboundLink")],1),t._v(" (stable; for running on PHP >= 5.5; for parsing PHP 5.2 to PHP 7.1).")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/nikic/PHP-Parser/tree/2.x/doc",target:"_blank",rel:"noopener noreferrer"}},[t._v("Documentation for version 2.x"),a("OutboundLink")],1),t._v(" (stable; for running on PHP >= 5.4; for parsing PHP 5.2 to PHP 7.0).")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/nikic/PHP-Parser/tree/1.x/doc",target:"_blank",rel:"noopener noreferrer"}},[t._v("Documentation for version 1.x"),a("OutboundLink")],1),t._v(" (unsupported; for running on PHP >= 5.3; for parsing PHP 5.2 to PHP 5.6).")]),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("The parser turns PHP source code into an abstract syntax tree. For example, if you pass the following code into the\nparser:")]),t._v(" "),t._m(2),a("p",[t._v("You'll get a syntax tree looking roughly like this:")]),t._v(" "),t._m(3),a("p",[t._v("You can then work with this syntax tree, for example to statically analyze the code (e.g. to find\nprogramming errors or security issues).")]),t._v(" "),a("p",[t._v("Additionally, you can convert a syntax tree back to PHP code. This allows you to do code preprocessing\n(like automatedly porting code to older PHP versions).")]),t._v(" "),t._m(4),t._v(" "),a("p",[t._v("The preferred installation method is "),a("a",{attrs:{href:"https://getcomposer.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("composer"),a("OutboundLink")],1),t._v(":")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),a("p",[t._v("Component documentation:")]),t._v(" "),t._m(8)])},[function(){var t=this.$createElement,n=this._self._c||t;return n("h1",{attrs:{id:"php-parser"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#php-parser","aria-hidden":"true"}},[this._v("#")]),this._v(" PHP Parser")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"in-a-nutshell"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#in-a-nutshell","aria-hidden":"true"}},[this._v("#")]),this._v(" In a Nutshell")])},function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{attrs:{class:"token php language-php"}},[a("span",{attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'Hi'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'World'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhello\\"),a("span",{attrs:{class:"token package"}},[t._v("world")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'foo'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'bar'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'baz'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])},function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("array")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Stmt_Echo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        exprs"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("array")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Scalar_String")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Hi\n            "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Scalar_String")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" World\n            "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Expr_FuncCall")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Name")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            parts"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("array")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hello\n                "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" world\n            "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        args"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("array")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Arg")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Scalar_String")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo\n                "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                byRef"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Arg")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Expr_Concat")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    left"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Scalar_String")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                        value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bar\n                    "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    right"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Scalar_String")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                        value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" baz\n                    "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                byRef"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"installation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#installation","aria-hidden":"true"}},[this._v("#")]),this._v(" Installation")])},function(){var t=this.$createElement,n=this._self._c||t;return n("pre",[n("code",[this._v("php composer.phar require nikic/php-parser\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"documentation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#documentation","aria-hidden":"true"}},[this._v("#")]),this._v(" Documentation")])},function(){var t=this.$createElement,n=this._self._c||t;return n("ol",[n("li",[n("a",{attrs:{href:"doc/0_Introduction.markdown"}},[this._v("Introduction")])]),this._v(" "),n("li",[n("a",{attrs:{href:"doc/2_Usage_of_basic_components.markdown"}},[this._v("Usage of basic components")])]),this._v(" "),n("li",[n("a",{attrs:{href:"doc/3_Other_node_tree_representations.markdown"}},[this._v("Other node tree representations")])]),this._v(" "),n("li",[n("a",{attrs:{href:"doc/4_Code_generation.markdown"}},[this._v("Code generation")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("ol",[n("li",[n("a",{attrs:{href:"doc/component/Error_handling.markdown"}},[this._v("Error handling")])]),this._v(" "),n("li",[n("a",{attrs:{href:"doc/component/Lexer.markdown"}},[this._v("Lexer")])])])}],!1,null,null,null);n.default=r.exports}}]);