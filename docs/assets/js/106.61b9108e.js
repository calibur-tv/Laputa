(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{350:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),a("p",[t._v("Old (still works, but discouraged):")]),t._v(" "),t._m(5),a("p",[t._v("New:")]),t._v(" "),t._m(6),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),t._v(" "),a("ul",[a("li",[a("p",[t._v("The classes "),a("code",[t._v("Template")]),t._v(" and "),a("code",[t._v("TemplateLoader")]),t._v(" have been removed. You should use some other "),a("a",{attrs:{href:"https://github.com/nikic/PHP-Parser/wiki/Projects-using-the-PHP-Parser#code-generation",target:"_blank",rel:"noopener noreferrer"}},[t._v("code generation"),a("OutboundLink")],1),t._v("\nproject built on top of PHP-Parser instead.")])]),t._v(" "),t._m(15)])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"upgrading-from-php-parser-0-9-to-1-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upgrading-from-php-parser-0-9-to-1-0","aria-hidden":"true"}},[this._v("#")]),this._v(" Upgrading from PHP-Parser 0.9 to 1.0")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"php-version-requirements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-version-requirements","aria-hidden":"true"}},[this._v("#")]),this._v(" PHP version requirements")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("PHP-Parser now requires PHP 5.3 or newer to run. It is however still possible to "),s("em",[this._v("parse")]),this._v(" PHP 5.2 source code, while\nrunning on a newer version.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"move-to-namespaced-names"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#move-to-namespaced-names","aria-hidden":"true"}},[this._v("#")]),this._v(" Move to namespaced names")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The library has been moved to use namespaces with the "),s("code",[this._v("PhpParser")]),this._v(" vendor prefix. However, the old names using\nunderscores are still available as aliases, as such most code should continue running on the new version without\nfurther changes.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{attrs:{class:"token variable"}},[t._v("$parser")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("PHPParser_Parser")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("PHPParser_Lexer_Emulative")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$prettyPrinter")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("PHPParser_PrettyPrinter_Default")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{attrs:{class:"token variable"}},[t._v("$parser")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("PhpParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Parser")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("PhpParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Lexer"),a("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Emulative")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$prettyPrinter")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("PhpParser"),a("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("PrettyPrinter"),a("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Standard")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Note that the "),s("code",[this._v("PHPParser")]),this._v(" prefix was changed to "),s("code",[this._v("PhpParser")]),this._v(". While PHP class names are technically case-insensitive,\nthe autoloader will not be able to load "),s("code",[this._v("PHPParser\\Parser")]),this._v(" or other case variants.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Due to conflicts with reserved keywords, some class names now end with an underscore, e.g. "),s("code",[this._v("PHPParser_Node_Stmt_Class")]),this._v("\nis now "),s("code",[this._v("PhpParser\\Node\\Stmt\\Class_")]),this._v(". (But as usual, the old name is still available.)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"changes-to-node-gettype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#changes-to-node-gettype","aria-hidden":"true"}},[this._v("#")]),this._v(" Changes to "),s("code",[this._v("Node::getType()")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The "),s("code",[this._v("Node::getType()")]),this._v(" method continues to return names using underscores instead of namespace separators and also does\nnot contain the trailing underscore that may be present in the class name. As such its output will not change in many\ncases.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("However, some node classes have been moved to a different namespace or renamed, which will result in a different\n"),s("code",[this._v("Node::getType()")]),this._v(" output:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("Expr_AssignBitwiseAnd => Expr_AssignOp_BitwiseAnd\nExpr_AssignBitwiseOr  => Expr_AssignOp_BitwiseOr\nExpr_AssignBitwiseXor => Expr_AssignOp_BitwiseXor\nExpr_AssignConcat     => Expr_AssignOp_Concat\nExpr_AssignDiv        => Expr_AssignOp_Div\nExpr_AssignMinus      => Expr_AssignOp_Minus\nExpr_AssignMod        => Expr_AssignOp_Mod\nExpr_AssignMul        => Expr_AssignOp_Mul\nExpr_AssignPlus       => Expr_AssignOp_Plus\nExpr_AssignShiftLeft  => Expr_AssignOp_ShiftLeft\nExpr_AssignShiftRight => Expr_AssignOp_ShiftRight\n\nExpr_BitwiseAnd       => Expr_BinaryOp_BitwiseAnd\nExpr_BitwiseOr        => Expr_BinaryOp_BitwiseOr\nExpr_BitwiseXor       => Expr_BinaryOp_BitwiseXor\nExpr_BooleanAnd       => Expr_BinaryOp_BooleanAnd\nExpr_BooleanOr        => Expr_BinaryOp_BooleanOr\nExpr_Concat           => Expr_BinaryOp_Concat\nExpr_Div              => Expr_BinaryOp_Div\nExpr_Equal            => Expr_BinaryOp_Equal\nExpr_Greater          => Expr_BinaryOp_Greater\nExpr_GreaterOrEqual   => Expr_BinaryOp_GreaterOrEqual\nExpr_Identical        => Expr_BinaryOp_Identical\nExpr_LogicalAnd       => Expr_BinaryOp_LogicalAnd\nExpr_LogicalOr        => Expr_BinaryOp_LogicalOr\nExpr_LogicalXor       => Expr_BinaryOp_LogicalXor\nExpr_Minus            => Expr_BinaryOp_Minus\nExpr_Mod              => Expr_BinaryOp_Mod\nExpr_Mul              => Expr_BinaryOp_Mul\nExpr_NotEqual         => Expr_BinaryOp_NotEqual\nExpr_NotIdentical     => Expr_BinaryOp_NotIdentical\nExpr_Plus             => Expr_BinaryOp_Plus\nExpr_ShiftLeft        => Expr_BinaryOp_ShiftLeft\nExpr_ShiftRight       => Expr_BinaryOp_ShiftRight\nExpr_Smaller          => Expr_BinaryOp_Smaller\nExpr_SmallerOrEqual   => Expr_BinaryOp_SmallerOrEqual\n\nScalar_ClassConst     => Scalar_MagicConst_Class\nScalar_DirConst       => Scalar_MagicConst_Dir\nScalar_FileConst      => Scalar_MagicConst_File\nScalar_FuncConst      => Scalar_MagicConst_Function\nScalar_LineConst      => Scalar_MagicConst_Line\nScalar_MethodConst    => Scalar_MagicConst_Method\nScalar_NSConst        => Scalar_MagicConst_Namespace\nScalar_TraitConst     => Scalar_MagicConst_Trait\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("These changes may affect custom pretty printers and code comparing the return value of "),s("code",[this._v("Node::getType()")]),this._v(" to specific\nstrings.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"miscellaneous"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#miscellaneous","aria-hidden":"true"}},[this._v("#")]),this._v(" Miscellaneous")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("li",[a("p",[t._v("The "),a("code",[t._v("PrettyPrinterAbstract::pStmts()")]),t._v(" method now emits a leading newline if the statement list is not empty.\nCustom pretty printers should remove the explicit newline before "),a("code",[t._v("pStmts()")]),t._v(" calls.")]),t._v(" "),a("p",[t._v("Old:")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("pStmt_Trait")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PHPParser_Node_Stmt_Trait "),a("span",{attrs:{class:"token variable"}},[t._v("$node")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'trait '")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$node")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token property"}},[t._v("name")]),t._v("\n         "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"\\n"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'{'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"\\n"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$this")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token function"}},[t._v("pStmts")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$node")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token property"}},[t._v("stmts")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"\\n"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'}'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("New:")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("pStmt_Trait")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Stmt\\"),a("span",{attrs:{class:"token package"}},[t._v("Trait_")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$node")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'trait '")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$node")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token property"}},[t._v("name")]),t._v("\n         "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"\\n"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'{'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$this")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token function"}},[t._v("pStmts")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$node")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token property"}},[t._v("stmts")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"\\n"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'}'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}],!1,null,null,null);s.default=e.exports}}]);