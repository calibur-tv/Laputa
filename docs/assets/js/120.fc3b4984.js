(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{329:function(e,t,a){"use strict";a.r(t);var i=a(0),r=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"_1-7-2-2017-10-04"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-2-2017-10-04","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.7.2 / 2017-10-04")]),e._v(" "),a("ul",[a("li",[e._v('Reverted "check method predictions only once" due to it breaking Spies')])]),e._v(" "),a("h1",{attrs:{id:"_1-7-1-2017-10-03"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-1-2017-10-03","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.7.1 / 2017-10-03")]),e._v(" "),a("ul",[a("li",[e._v("Allow PHP5 keywords methods generation on PHP7 (thanks @bycosta)")]),e._v(" "),a("li",[e._v("Allow reflection-docblock v4 (thanks @GrahamCampbell)")]),e._v(" "),a("li",[e._v("Check method predictions only once (thanks @dontub)")]),e._v(" "),a("li",[e._v("Escape file path sent to \\SplFileObjectConstructor when running on Windows (thanks @danmartin-epiphany)")])]),e._v(" "),a("h1",{attrs:{id:"_1-7-0-2017-03-02"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-0-2017-03-02","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.7.0 / 2017-03-02")]),e._v(" "),a("ul",[a("li",[e._v("Add full PHP 7.1 Support (thanks @prolic)")]),e._v(" "),a("li",[e._v("Allow "),a("code",[e._v("sebastian/comparator ^2.0")]),e._v(" (thanks @sebastianbergmann)")]),e._v(" "),a("li",[e._v("Allow "),a("code",[e._v("sebastian/recursion-context ^3.0")]),e._v(" (thanks @sebastianbergmann)")]),e._v(" "),a("li",[e._v("Allow "),a("code",[e._v("\\Error")]),e._v(" instances in "),a("code",[e._v("ThrowPromise")]),e._v(" (thanks @jameshalsall)")]),e._v(" "),a("li",[e._v("Support "),a("code",[e._v("phpspec/phpspect ^3.2")]),e._v(" (thanks @Sam-Burns)")]),e._v(" "),a("li",[e._v("Fix failing builds (thanks @Sam-Burns)")])]),e._v(" "),a("h1",{attrs:{id:"_1-6-2-2016-11-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-2-2016-11-21","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.6.2 / 2016-11-21")]),e._v(" "),a("ul",[a("li",[e._v("Added support for detecting @method on interfaces that the class itself implements, or when the stubbed class is an interface itself (thanks @Seldaek)")]),e._v(" "),a("li",[e._v("Added support for sebastian/recursion-context 2 (thanks @sebastianbergmann)")]),e._v(" "),a("li",[e._v("Added testing on PHP 7.1 on Travis (thanks @danizord)")]),e._v(" "),a("li",[e._v("Fixed the usage of the phpunit comparator (thanks @Anyqax)")])]),e._v(" "),a("h1",{attrs:{id:"_1-6-1-2016-06-07"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-1-2016-06-07","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.6.1 / 2016-06-07")]),e._v(" "),a("ul",[a("li",[e._v("Ignored empty method names in invalid "),a("code",[e._v("@method")]),e._v(" phpdoc")]),e._v(" "),a("li",[e._v("Fixed the mocking of SplFileObject")]),e._v(" "),a("li",[e._v("Added compatibility with phpdocumentor/reflection-docblock 3")])]),e._v(" "),a("h1",{attrs:{id:"_1-6-0-2016-02-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-0-2016-02-15","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.6.0 / 2016-02-15")]),e._v(" "),a("ul",[a("li",[e._v("Add Variadics support (thanks @pamil)")]),e._v(" "),a("li",[e._v("Add ProphecyComparator for comparing objects that need revealing (thanks @jon-acker)")]),e._v(" "),a("li",[e._v("Add ApproximateValueToken (thanks @dantleech)")]),e._v(" "),a("li",[e._v("Add support for 'self' and 'parent' return type (thanks @bendavies)")]),e._v(" "),a("li",[e._v("Add __invoke to allowed reflectable methods list (thanks @ftrrtf)")]),e._v(" "),a("li",[e._v("Updated ExportUtil to reflect the latest changes by Sebastian (thanks @jakari)")]),e._v(" "),a("li",[e._v("Specify the required php version for composer (thanks @jakzal)")]),e._v(" "),a("li",[e._v("Exclude 'args' in the generated backtrace (thanks @oradwell)")]),e._v(" "),a("li",[e._v("Fix code generation for scalar parameters (thanks @trowski)")]),e._v(" "),a("li",[e._v("Fix missing sprintf in InvalidArgumentException __construct call (thanks @emmanuelballery)")]),e._v(" "),a("li",[e._v("Fix phpdoc for magic methods (thanks @Tobion)")]),e._v(" "),a("li",[e._v("Fix PhpDoc for interfaces usage (thanks @ImmRanneft)")]),e._v(" "),a("li",[e._v("Prevent final methods from being manually extended (thanks @kamioftea)")]),e._v(" "),a("li",[e._v("Enhance exception for invalid argument to ThrowPromise (thanks @Tobion)")])]),e._v(" "),a("h1",{attrs:{id:"_1-5-0-2015-04-27"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-0-2015-04-27","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.5.0 / 2015-04-27")]),e._v(" "),a("ul",[a("li",[e._v("Add support for PHP7 scalar type hints (thanks @trowski)")]),e._v(" "),a("li",[e._v("Add support for PHP7 return types (thanks @trowski)")]),e._v(" "),a("li",[e._v("Update internal test suite to support PHP7")])]),e._v(" "),a("h1",{attrs:{id:"_1-4-1-2015-04-27"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-2015-04-27","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.4.1 / 2015-04-27")]),e._v(" "),a("ul",[a("li",[e._v("Fixed bug in closure-based argument tokens (#181)")])]),e._v(" "),a("h1",{attrs:{id:"_1-4-0-2015-03-27"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-0-2015-03-27","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.4.0 / 2015-03-27")]),e._v(" "),a("ul",[a("li",[e._v("Fixed errors in return type phpdocs (thanks @sobit)")]),e._v(" "),a("li",[e._v("Fixed stringifying of hash containing one value (thanks @avant1)")]),e._v(" "),a("li",[e._v("Improved clarity of method call expectation exception (thanks @dantleech)")]),e._v(" "),a("li",[e._v("Add ability to specify which argument is returned in willReturnArgument (thanks @coderbyheart)")]),e._v(" "),a("li",[e._v("Add more information to MethodNotFound exceptions (thanks @ciaranmcnulty)")]),e._v(" "),a("li",[e._v("Support for mocking classes with methods that return references (thanks @edsonmedina)")]),e._v(" "),a("li",[e._v("Improved object comparison (thanks @whatthejeff)")]),e._v(" "),a("li",[e._v("Adopted '^' in composer dependencies (thanks @GrahamCampbell)")]),e._v(" "),a("li",[e._v("Fixed non-typehinted arguments being treated as optional (thanks @whatthejeff)")]),e._v(" "),a("li",[e._v("Magic methods are now filtered for keywords (thanks @seagoj)")]),e._v(" "),a("li",[e._v("More readable errors for failure when expecting single calls (thanks @dantleech)")])]),e._v(" "),a("h1",{attrs:{id:"_1-3-1-2014-11-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-2014-11-17","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.3.1 / 2014-11-17")]),e._v(" "),a("ul",[a("li",[e._v("Fix the edge case when failed predictions weren't recorded for "),a("code",[e._v("getCheckedPredictions()")])])]),e._v(" "),a("h1",{attrs:{id:"_1-3-0-2014-11-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-0-2014-11-14","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.3.0 / 2014-11-14")]),e._v(" "),a("ul",[a("li",[e._v("Add a way to get checked predictions with "),a("code",[e._v("MethodProphecy::getCheckedPredictions()")])]),e._v(" "),a("li",[e._v("Fix HHVM compatibility")]),e._v(" "),a("li",[e._v("Remove dead code (thanks @stof)")]),e._v(" "),a("li",[e._v("Add support for DirectoryIterators (thanks @shanethehat)")])]),e._v(" "),a("h1",{attrs:{id:"_1-2-0-2014-07-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-0-2014-07-18","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.2.0 / 2014-07-18")]),e._v(" "),a("ul",[a("li",[e._v("Added support for doubling magic methods documented in the class phpdoc (thanks @armetiz)")]),e._v(" "),a("li",[e._v("Fixed a segfault appearing in some cases (thanks @dmoreaulf)")]),e._v(" "),a("li",[e._v("Fixed the doubling of methods with typehints on non-existent classes (thanks @gquemener)")]),e._v(" "),a("li",[e._v("Added support for internal classes using keywords as method names (thanks @milan)")]),e._v(" "),a("li",[e._v("Added IdenticalValueToken and Argument::is (thanks @florianv)")]),e._v(" "),a("li",[e._v("Removed the usage of scalar typehints in HHVM as HHVM 3 does not support them anymore in PHP code (thanks @whatthejeff)")])]),e._v(" "),a("h1",{attrs:{id:"_1-1-2-2014-01-24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-2014-01-24","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.1.2 / 2014-01-24")]),e._v(" "),a("ul",[a("li",[e._v("Spy automatically promotes spied method call to an expected one")])]),e._v(" "),a("h1",{attrs:{id:"_1-1-1-2014-01-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-2014-01-15","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.1.1 / 2014-01-15")]),e._v(" "),a("ul",[a("li",[e._v("Added support for HHVM")])]),e._v(" "),a("h1",{attrs:{id:"_1-1-0-2014-01-01"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-0-2014-01-01","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.1.0 / 2014-01-01")]),e._v(" "),a("ul",[a("li",[e._v("Changed the generated class names to use a static counter instead of a random number")]),e._v(" "),a("li",[e._v("Added a clss patch for ReflectionClass::newInstance to make its argument optional consistently (thanks @docteurklein)")]),e._v(" "),a("li",[e._v("Fixed mirroring of classes with typehints on non-existent classes (thanks @docteurklein)")]),e._v(" "),a("li",[e._v("Fixed the support of array callables in CallbackPromise and CallbackPrediction (thanks @ciaranmcnulty)")]),e._v(" "),a("li",[e._v("Added support for properties in ObjectStateToken (thanks @adrienbrault)")]),e._v(" "),a("li",[e._v("Added support for mocking classes with a final constructor (thanks @ciaranmcnulty)")]),e._v(" "),a("li",[e._v("Added ArrayEveryEntryToken and Argument::withEveryEntry() (thanks @adrienbrault)")]),e._v(" "),a("li",[e._v("Added an exception when trying to prophesize on a final method instead of ignoring silently (thanks @docteurklein)")]),e._v(" "),a("li",[e._v("Added StringContainToken and Argument::containingString() (thanks @peterjmit)")]),e._v(" "),a("li",[e._v("Added "),a("code",[e._v("shouldNotHaveBeenCalled")]),e._v(" on the MethodProphecy (thanks @ciaranmcnulty)")]),e._v(" "),a("li",[e._v("Fixed the comparison of objects in ExactValuetoken (thanks @sstok)")]),e._v(" "),a("li",[e._v("Deprecated "),a("code",[e._v("shouldNotBeenCalled")]),e._v(" in favor of "),a("code",[e._v("shouldNotHaveBeenCalled")])])]),e._v(" "),a("h1",{attrs:{id:"_1-0-4-2013-08-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-4-2013-08-10","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.0.4 / 2013-08-10")]),e._v(" "),a("ul",[a("li",[e._v("Better randomness for generated class names (thanks @sstok)")]),e._v(" "),a("li",[e._v("Add support for interfaces into TypeToken and Argument::type() (thanks @sstok)")]),e._v(" "),a("li",[e._v("Add support for old-style (method name === class name) constructors (thanks @l310 for report)")])]),e._v(" "),a("h1",{attrs:{id:"_1-0-3-2013-07-04"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-3-2013-07-04","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.0.3 / 2013-07-04")]),e._v(" "),a("ul",[a("li",[e._v("Support callable typehints (thanks @stof)")]),e._v(" "),a("li",[e._v("Do not attempt to autoload arrays when generating code (thanks @MarcoDeBortoli)")]),e._v(" "),a("li",[e._v("New ArrayEntryToken (thanks @kagux)")])]),e._v(" "),a("h1",{attrs:{id:"_1-0-2-2013-05-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-2-2013-05-19","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.0.2 / 2013-05-19")]),e._v(" "),a("ul",[a("li",[e._v("Logical "),a("code",[e._v("AND")]),e._v(" token added (thanks @kagux)")]),e._v(" "),a("li",[e._v("Logical "),a("code",[e._v("NOT")]),e._v(" token added (thanks @kagux)")]),e._v(" "),a("li",[e._v("Add support for setting custom constructor arguments")]),e._v(" "),a("li",[e._v("Properly stringify hashes")]),e._v(" "),a("li",[e._v("Record calls that throw exceptions")]),e._v(" "),a("li",[e._v("Migrate spec suite to PhpSpec 2.0")])]),e._v(" "),a("h1",{attrs:{id:"_1-0-1-2013-04-30"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-1-2013-04-30","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.0.1 / 2013-04-30")]),e._v(" "),a("ul",[a("li",[e._v("Fix broken UnexpectedCallException message")]),e._v(" "),a("li",[e._v("Trim AggregateException message")])]),e._v(" "),a("h1",{attrs:{id:"_1-0-0-2013-04-29"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-0-2013-04-29","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.0.0 / 2013-04-29")]),e._v(" "),a("ul",[a("li",[e._v("Improve exception messages")])]),e._v(" "),a("h1",{attrs:{id:"_1-0-0-beta2-2013-04-03"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-0-beta2-2013-04-03","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.0.0-BETA2 / 2013-04-03")]),e._v(" "),a("ul",[a("li",[e._v("Add more debug information to CallTimes and Call prediction exception messages")]),e._v(" "),a("li",[e._v("Fix MethodNotFoundException wrong namespace (thanks @gunnarlium)")]),e._v(" "),a("li",[e._v("Fix some typos in the exception messages (thanks @pborreli)")])]),e._v(" "),a("h1",{attrs:{id:"_1-0-0-beta1-2013-03-25"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-0-beta1-2013-03-25","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.0.0-BETA1 / 2013-03-25")]),e._v(" "),a("ul",[a("li",[e._v("Initial release")])])])}],!1,null,null,null);t.default=r.exports}}]);