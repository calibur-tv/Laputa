(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{393:function(e,t,s){"use strict";s.r(t);var a=s(0),i=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"core-concepts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#core-concepts","aria-hidden":"true"}},[e._v("#")]),e._v(" Core Concepts")]),e._v(" "),s("p",[e._v("In order to better understand how and why Flysystem works\nthe way it does, several concepts require some explanation.")]),e._v(" "),s("h2",{attrs:{id:"overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#adapters"}},[e._v("Adapters")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#relative-paths"}},[e._v("Relative Paths")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#files-first"}},[e._v("Files first")])])]),e._v(" "),s("h2",{attrs:{id:"adapters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adapters","aria-hidden":"true"}},[e._v("#")]),e._v(" Adapters")]),e._v(" "),s("p",[e._v("The main entry point for the file system API is the\nFilesystemInterface. When working with file systems, this is\nthe class you'll want to be talking to.")]),e._v(" "),s("p",[e._v("Flysystem works the way it does because of its use of the\nadapter pattern. The inconsistencies of the different file\nsystems are eliminated in these adapters.")]),e._v(" "),s("p",[e._v("While adapters have a public interface (publicly accessible\nmethods), they should be considered "),s("strong",[e._v("internal")]),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"relative-paths"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#relative-paths","aria-hidden":"true"}},[e._v("#")]),e._v(" Relative Paths")]),e._v(" "),s("p",[e._v("Portability is a very important concept within Flysystem. In order\nto roll out this aspect to the fullest, all paths in Flysystem are\nrelative. File system root paths, whether remote or local, are viewed\nas endpoints. Because of this, file systems are movable independently.\nThis allows parts of the application file handling to move to other\nstorage types, while the majority is in a centralized location.")]),e._v(" "),s("p",[e._v("Like the storage type, root paths are an implementation detail. When\nroot paths are defined as configuration, the stability of your code\nimproves.")]),e._v(" "),s("h2",{attrs:{id:"files-first"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#files-first","aria-hidden":"true"}},[e._v("#")]),e._v(" Files First")]),e._v(" "),s("p",[e._v("Flysystem has a files first approach. Storage systems like AWS S3\nare linear file systems, this means the path to a file is used as an\nidentifier, rather than a representation of all the directories it's\nnested in.")]),e._v(" "),s("p",[e._v("This means directories are second class citizens. Because of this,\ndirectories will be automatically created on file systems that require\nthem when writing files. Not only does this make handling writes a lot\neasier, it also ensures a consistent behaviors across all file system\ntypes.")])])}],!1,null,null,null);t.default=i.exports}}]);