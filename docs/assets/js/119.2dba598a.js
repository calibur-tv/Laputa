(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{330:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("p",[t._v("The specification on types in DocBlocks (PSR-5) describes various keywords and special constructs\nbut also how to statically resolve the partial name of a Class into a Fully Qualified Class Name (FQCN).")]),t._v(" "),e("p",[t._v("PSR-5 also introduces an additional way to describe deeper elements than Classes, Interfaces and Traits\ncalled the Fully Qualified Structural Element Name (FQSEN). Using this it is possible to refer to methods,\nproperties and class constants but also functions and global constants.")]),t._v(" "),e("p",[t._v("This package provides two Resolvers that are capable of")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),e("p",[t._v("The easiest way to install this library is with "),e("a",{attrs:{href:"https://getcomposer.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Composer"),e("OutboundLink")],1),t._v(" using the following command:")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),e("p",[t._v("This component can be used in one of two ways")]),t._v(" "),t._m(7),t._v(" "),e("p",[t._v("The big difference between these two is in the number of things it can resolve.")]),t._v(" "),e("p",[t._v("The TypeResolver can resolve:")]),t._v(" "),t._m(8),t._v(" "),e("p",[t._v("Where the FqsenResolver can resolve:")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),e("p",[t._v("Perhaps the best feature of this library is that it knows how to resolve partial class names into fully qualified class\nnames.")]),t._v(" "),e("p",[t._v("For example, you have this file:")]),t._v(" "),t._m(21),t._m(22),t._v(" "),t._m(23),t._v(" "),e("p",[t._v("You can do this by manually creating a Context like this:")]),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),e("p",[t._v("or")]),t._v(" "),t._m(27),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._m(36)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"typeresolver-and-fqsenresolver"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typeresolver-and-fqsenresolver","aria-hidden":"true"}},[this._v("#")]),this._v(" TypeResolver and FqsenResolver")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("Returning a series of Value Object for given expression while resolving any partial class names, and")]),this._v(" "),s("li",[this._v("Returning an FQSEN object after resolving any partial Structural Element Names into Fully Qualified Structural\nElement names.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"installing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installing","aria-hidden":"true"}},[this._v("#")]),this._v(" Installing")])},function(){var t=this.$createElement,s=this._self._c||t;return s("pre",[s("code",[this._v("$ composer require phpdocumentor/type-resolver\n")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Examples")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Ready to dive in and don't want to read through all that text below? Just consult the "),s("a",{attrs:{href:"examples"}},[this._v("examples")]),this._v(" folder and\ncheck which type of action that your want to accomplish.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"on-types-and-element-names"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#on-types-and-element-names","aria-hidden":"true"}},[this._v("#")]),this._v(" On Types and Element Names")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("To resolve a Type or")]),this._v(" "),s("li",[this._v("To resolve a Fully Qualified Structural Element Name")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[e("p",[t._v("a php primitive or pseudo-primitive such as a string or void ("),e("code",[t._v("@var string")]),t._v(" or "),e("code",[t._v("@return void")]),t._v(").")])]),t._v(" "),e("li",[e("p",[t._v("a composite such as an array of string ("),e("code",[t._v("@var string[]")]),t._v(").")])]),t._v(" "),e("li",[e("p",[t._v("a compound such as a string or integer ("),e("code",[t._v("@var string|integer")]),t._v(").")])]),t._v(" "),e("li",[e("p",[t._v("an object or interface such as the TypeResolver class ("),e("code",[t._v("@var TypeResolver")]),t._v("\nor "),e("code",[t._v("@var \\phpDocumentor\\Reflection\\TypeResolver")]),t._v(")")]),t._v(" "),e("blockquote",[e("p",[t._v("please note that if you want to pass partial class names that additional steps are necessary, see the\nchapter "),e("code",[t._v("Resolving partial classes and FQSENs")]),t._v(" for more information.")])])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[t._v("Constant expressions (i.e. "),e("code",[t._v("@see \\MyNamespace\\MY_CONSTANT")]),t._v(")")]),t._v(" "),e("li",[t._v("Function expressions (i.e. "),e("code",[t._v("@see \\MyNamespace\\myFunction()")]),t._v(")")]),t._v(" "),e("li",[t._v("Class expressions (i.e. "),e("code",[t._v("@see \\MyNamespace\\MyClass")]),t._v(")")]),t._v(" "),e("li",[t._v("Interface expressions (i.e. "),e("code",[t._v("@see \\MyNamespace\\MyInterface")]),t._v(")")]),t._v(" "),e("li",[t._v("Trait expressions (i.e. "),e("code",[t._v("@see \\MyNamespace\\MyTrait")]),t._v(")")]),t._v(" "),e("li",[t._v("Class constant expressions (i.e. "),e("code",[t._v("@see \\MyNamespace\\MyClass::MY_CONSTANT")]),t._v(")")]),t._v(" "),e("li",[t._v("Property expressions (i.e. "),e("code",[t._v("@see \\MyNamespace\\MyClass::$myProperty")]),t._v(")")]),t._v(" "),e("li",[t._v("Method expressions (i.e. "),e("code",[t._v("@see \\MyNamespace\\MyClass::myMethod()")]),t._v(")")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"resolving-a-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resolving-a-type","aria-hidden":"true"}},[this._v("#")]),this._v(" Resolving a type")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("In order to resolve a type you will have to instantiate the class "),s("code",[this._v("\\phpDocumentor\\Reflection\\TypeResolver")]),this._v("\nand call its "),s("code",[this._v("resolve")]),this._v(" method like this:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token variable"}},[t._v("$typeResolver")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("phpDocumentor"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Reflection"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TypeResolver")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token variable"}},[t._v("$type")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$typeResolver")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token function"}},[t._v("resolve")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'string|integer'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("In this example you will receive a Value Object of class "),s("code",[this._v("\\phpDocumentor\\Reflection\\Types\\Compound")]),this._v(" that has two\nelements, one of type "),s("code",[this._v("\\phpDocumentor\\Reflection\\Types\\String_")]),this._v(" and one of type\n"),s("code",[this._v("\\phpDocumentor\\Reflection\\Types\\Integer")]),this._v(".")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The real power of this resolver is in its capability to expand partial class names into fully qualified class names; but\nin order to do that we need an additional "),s("code",[this._v("\\phpDocumentor\\Reflection\\Types\\Context")]),this._v(" class that will inform the resolver\nin which namespace the given expression occurs and which namespace aliases (or imports) apply.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"resolving-an-fqsen"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resolving-an-fqsen","aria-hidden":"true"}},[this._v("#")]),this._v(" Resolving an FQSEN")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("A Fully Qualified Structural Element Name is a reference to another element in your code bases and can be resolved using\nthe "),s("code",[this._v("\\phpDocumentor\\Reflection\\FqsenResolver")]),this._v(" class' "),s("code",[this._v("resolve")]),this._v(" method, like this:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token variable"}},[t._v("$fqsenResolver")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("phpDocumentor"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Reflection"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FqsenResolver")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token variable"}},[t._v("$fqsen")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$fqsenResolver")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token function"}},[t._v("resolve")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'\\phpDocumentor\\Reflection\\FqsenResolver::resolve()'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("In this example we resolve a Fully Qualified Structural Element Name (meaning that it includes the full namespace, class\nname and element name) and receive a Value Object of type "),s("code",[this._v("\\phpDocumentor\\Reflection\\Fqsen")]),this._v(".")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The real power of this resolver is in its capability to expand partial element names into Fully Qualified Structural\nElement Names; but in order to do that we need an additional "),s("code",[this._v("\\phpDocumentor\\Reflection\\Types\\Context")]),this._v(" class that will\ninform the resolver in which namespace the given expression occurs and which namespace aliases (or imports) apply.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"resolving-partial-classes-and-structural-element-names"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resolving-partial-classes-and-structural-element-names","aria-hidden":"true"}},[this._v("#")]),this._v(" Resolving partial Classes and Structural Element Names")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),e("span",{attrs:{class:"token package"}},[t._v("My"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Example")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{attrs:{class:"token package"}},[t._v("phpDocumentor"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Reflection"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Types")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Classy")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token comment"}},[t._v("/**\n     * @var Types\\Context\n     * @see Classy::otherFunction()\n     */")]),t._v("\n    "),e("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("__construct")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token variable"}},[t._v("$context")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),e("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("otherFunction")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("Suppose that you would want to resolve (and expand) the type in the "),e("code",[t._v("@var")]),t._v(" tag and the element name in the "),e("code",[t._v("@see")]),t._v(" tag.\nFor the resolvers to know how to expand partial names you have to provide a bit of "),e("em",[t._v("Context")]),t._v(" for them by instantiating\na new class named "),e("code",[t._v("\\phpDocumentor\\Reflection\\Types\\Context")]),t._v(" with the name of the namespace and the aliases that are in\nplay.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"creating-a-context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-context","aria-hidden":"true"}},[this._v("#")]),this._v(" Creating a Context")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token variable"}},[t._v("$context")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("phpDocumentor"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Reflection"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Types"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Context")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'\\My\\Example'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    "),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'Types'")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'\\phpDocumentor\\Reflection\\Types'")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Or by using the "),s("code",[this._v("\\phpDocumentor\\Reflection\\Types\\ContextFactory")]),this._v(" to instantiate a new context based on a Reflector\nobject or by providing the namespace that you'd like to extract and the source code of the file in which the given\ntype expression occurs.")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token variable"}},[t._v("$contextFactory")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("phpDocumentor"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Reflection"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Types"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContextFactory")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token variable"}},[t._v("$context")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$contextFactory")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token function"}},[t._v("createFromReflector")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("ReflectionMethod")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'\\My\\Example\\Classy'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'__construct'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token variable"}},[t._v("$contextFactory")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("phpDocumentor"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Reflection"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Types"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ContextFactory")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token variable"}},[t._v("$context")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$contextFactory")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token function"}},[t._v("createForNamespace")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'\\My\\Example'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token function"}},[t._v("file_get_contents")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'My/Example/Classy.php'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"using-the-context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-the-context","aria-hidden":"true"}},[this._v("#")]),this._v(" Using the Context")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("After you have obtained a Context it is just a matter of passing it along with the "),s("code",[this._v("resolve")]),this._v(" method of either Resolver\nclass as second argument and the Resolvers will take this into account when resolving partial names.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("To obtain the resolved class name for the "),s("code",[this._v("@var")]),this._v(" tag in the example above you can do:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token variable"}},[t._v("$typeResolver")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("phpDocumentor"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Reflection"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TypeResolver")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token variable"}},[t._v("$type")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$typeResolver")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token function"}},[t._v("resolve")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'Types\\Context'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$context")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("When you do this you will receive an object of class "),s("code",[this._v("\\phpDocumentor\\Reflection\\Types\\Object_")]),this._v(" for which you can call\nthe "),s("code",[this._v("getFqsen")]),this._v(" method to receive a Value Object that represents the complete FQSEN. So that would be\n"),s("code",[this._v("phpDocumentor\\Reflection\\Types\\Context")]),this._v(".")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("blockquote",[e("p",[t._v("Why is the FQSEN wrapped in another object "),e("code",[t._v("Object_")]),t._v("?")]),t._v(" "),e("p",[t._v("The resolve method of the TypeResolver only returns object with the interface "),e("code",[t._v("Type")]),t._v(' and the FQSEN is a common\ntype that does not represent a Type. Also: in some cases a type can represent an "Untyped Object", meaning that it\nis an object (signified by the '),e("code",[t._v("object")]),t._v(" keyword) but does not refer to a specific element using an FQSEN.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Another example is on how to resolve the FQSEN of a method as can be seen with the "),s("code",[this._v("@see")]),this._v(" tag in the example above. To\nresolve that you can do the following:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token variable"}},[t._v("$fqsenResolver")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("phpDocumentor"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Reflection"),e("span",{attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FqsenResolver")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{attrs:{class:"token variable"}},[t._v("$type")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$fqsenResolver")]),e("span",{attrs:{class:"token operator"}},[t._v("-")]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),e("span",{attrs:{class:"token function"}},[t._v("resolve")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'Classy::otherFunction()'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{attrs:{class:"token variable"}},[t._v("$context")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("Because Classy is a Class in the current namespace its FQSEN will have the "),e("code",[t._v("My\\Example")]),t._v(" namespace and by calling the\n"),e("code",[t._v("resolve")]),t._v(" method of the FQSEN Resolver you will receive an "),e("code",[t._v("Fqsen")]),t._v(" object that refers to\n"),e("code",[t._v("\\My\\Example\\Classy::otherFunction()")]),t._v(".")])}],!1,null,null,null);s.default=n.exports}}]);