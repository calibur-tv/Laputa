(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{172:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("所有页面都要去替换 "+t._s(t.version)+" 为当前 APP 的版本号")]),t._v(" "),s("li",[t._v("所有页面都要去替换 "+t._s(t.name)+" 为当前系统的名称"),s("code",[t._v("ios")]),t._v("或"),s("code",[t._v("Android")]),t._v("（大小写不敏感）")])])]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8)])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"前提："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前提：","aria-hidden":"true"}},[this._v("#")]),this._v(" 前提：")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"方案："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方案：","aria-hidden":"true"}},[this._v("#")]),this._v(" 方案：")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ol",[s("li",[t._v("Android 和 iOS 在打开的模板页面里都要注入自己的 JS 到 window 下面")]),t._v(" "),s("li",[t._v("Android 的 namespace 是：__AndroidBridge")]),t._v(" "),s("li",[t._v("iOS 的 namespace 是：__WebBridge")]),t._v(" "),s("li",[t._v("以上两个命名空间前都有"),s("strong",[t._v("两个下划线")]),t._v("，大小写敏感")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"异步与同步："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步与同步：","aria-hidden":"true"}},[this._v("#")]),this._v(" 异步与同步：")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ol",[s("li",[t._v("因为 Android 和 iOS 的设备差异，所以所有的调用都使用异步回调方法，不走同步")]),t._v(" "),s("li",[t._v("因此无论是 JS call APP 还是 APP call JS 都要通过 callback 获取返回值")]),t._v(" "),s("li",[t._v("callback 通过 callbackId 的方式传递，各端在自己那里维护一个"),s("code",[t._v("id <--\x3e function")]),t._v("的对象")]),t._v(" "),s("li",[t._v("返回值或者参数的传递都以"),s("code",[t._v("Json-Object")]),t._v("的方式传递")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"实现："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现：","aria-hidden":"true"}},[this._v("#")]),this._v(" 实现：")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ol",[s("li",[s("p",[t._v("JsCallApp 的方法是：")]),t._v(" "),s("ol",[s("li",[t._v("Android：window.__AndroidBridge.handleMessageFromJS(data)")]),t._v(" "),s("li",[t._v("iOS：window.__WebBridge.handleMessageFromJS(data)")]),t._v(" "),s("li",[t._v("方法名："),s("code",[t._v("handleMessageFromJS")])]),t._v(" "),s("li",[t._v("参数："),s("code",[t._v("data")]),t._v(" 是一个 Json-Object，包括：（类型 | 注释 | 默认值）")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{attrs:{class:"token property"}},[t._v('"func"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("\"<String> | 函数名 | ''\"")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{attrs:{class:"token property"}},[t._v('"params"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"<Object> | 参数 | {}"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{attrs:{class:"token property"}},[t._v('"callbackId"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("\"<String> | 回调函数id | ''\"")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("（以下步骤 iOS 不需要执行，iOS 也没有 callbackId 这个参数）")])]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("当 APP 获得函数的执行结果后，通过调用以下方法回调 JS：\n"),s("code",[t._v("M.invoker.JsCallAppCallback(jsonObj)")]),t._v("\n其中 "),s("code",[t._v("jsonObj")]),t._v(" 有以下参数：")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{attrs:{class:"token property"}},[t._v('"params"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"<Object> | APP执行的返回值"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{attrs:{class:"token property"}},[t._v('"callbackId"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"<String> | 回调函数id"')]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("此处的 callbackId 就是 "),s("code",[t._v("handleMessageFromJS")]),t._v(" 时传的 callbackId")])])]),t._v(" "),s("li",[s("p",[t._v("AppCallJS 的方法是：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("M.invoker.appCallJs(jsonObj)")])]),t._v(" "),s("li",[t._v("参数 "),s("code",[t._v("jsonObj")]),t._v(" 是一个 Json-Object，包括：（类型 | 注释 | 默认值）")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{attrs:{class:"token property"}},[t._v('"func"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("\"<String> | 函数名 | ''\"")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{attrs:{class:"token property"}},[t._v('"params"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"<Object> | 参数 | {}"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{attrs:{class:"token property"}},[t._v('"callbackId"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("\"<String> | 回调函数id | ''\"")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("（以下步骤 iOS 不需要执行，iOS 也没有 callbackId 这个参数）")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("当 JS 执行完"),s("code",[t._v("func")]),t._v("之后，如果 callbackId 不为空，就会调用：")]),t._v(" "),s("li",[t._v("iOS：window.__WebBridge.handleCallbackFromJS(data)")]),t._v(" "),s("li",[t._v("Android：window.__AndroidBridge.handleCallbackFromJS(data)\n其中 "),s("code",[t._v("data")]),t._v(" 有以下参数：")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{attrs:{class:"token property"}},[t._v('"params"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"<Object> | JS执行的返回值"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{attrs:{class:"token property"}},[t._v('"callbackId"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"<String> | 回调函数id"')]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("此处的 callbackId 就是 "),s("code",[t._v("handleCallbackFromJS")]),t._v(" 时传的 callbackId")])])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"基本实现："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本实现：","aria-hidden":"true"}},[this._v("#")]),this._v(" 基本实现：")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ol",[s("li",[s("p",[t._v("Android 和 iOS 要统一路由规则，然后提供一个方法，让 JS 可以打开任意的 native 页面，支持传递参数，如：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{attrs:{class:"token property"}},[t._v('"page"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"note"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{attrs:{class:"token property"}},[t._v('"params"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{attrs:{class:"token property"}},[t._v('"id"')]),s("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",[s("li",[t._v("支持"),s("code",[t._v("note-1")]),t._v("--\x3e"),s("code",[t._v("note-2")]),t._v("，"),s("code",[t._v("note-1")]),t._v(" --\x3e "),s("code",[t._v("image-2")])]),t._v(" "),s("li",[t._v("避免"),s("code",[t._v("note-1")]),t._v("--\x3e"),s("code",[t._v("note-1")]),t._v(" 的无限循环")]),t._v(" "),s("li",[t._v("避免"),s("code",[t._v("note-1")]),t._v("--\x3e"),s("code",[t._v("note-2")]),t._v("--\x3e"),s("code",[t._v("note-1")]),t._v("... 的 route stack 出现循环")])])]),t._v(" "),s("li",[s("p",[t._v("Android 和 iOS 都要实现让 JS 可以打开任意其它的 H5 模板页面，如果参数传递可以做到，需要支持参数传递，如：")]),t._v(" "),s("p",[s("code",[t._v("/post-v1.mustache?foo=bar")])])])])}],!1,null,null,null);a.default=e.exports}}]);