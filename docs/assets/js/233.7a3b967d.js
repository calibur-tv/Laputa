(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{179:function(e,a,t){"use strict";t.r(a);var r=t(0),d=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"changelog"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#changelog","aria-hidden":"true"}},[e._v("#")]),e._v(" CHANGELOG")]),e._v(" "),t("h2",{attrs:{id:"_3-4-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-0","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.4.0")]),e._v(" "),t("ul",[t("li",[e._v("deprecated "),t("code",[e._v("Symfony\\Component\\Finder\\Iterator\\FilterIterator")])]),e._v(" "),t("li",[e._v("added Finder::hasResults() method to check if any results were found")])]),e._v(" "),t("h2",{attrs:{id:"_3-3-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-0","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.3.0")]),e._v(" "),t("ul",[t("li",[e._v("added double-star matching to Glob::toRegex()")])]),e._v(" "),t("h2",{attrs:{id:"_3-0-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-0-0","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.0.0")]),e._v(" "),t("ul",[t("li",[e._v("removed deprecated classes")])]),e._v(" "),t("h2",{attrs:{id:"_2-8-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-0","aria-hidden":"true"}},[e._v("#")]),e._v(" 2.8.0")]),e._v(" "),t("ul",[t("li",[e._v("deprecated adapters and related classes")])]),e._v(" "),t("h2",{attrs:{id:"_2-5-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-0","aria-hidden":"true"}},[e._v("#")]),e._v(" 2.5.0")]),e._v(" "),t("ul",[t("li",[e._v("added support for GLOB_BRACE in the paths passed to Finder::in()")])]),e._v(" "),t("h2",{attrs:{id:"_2-3-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-0","aria-hidden":"true"}},[e._v("#")]),e._v(" 2.3.0")]),e._v(" "),t("ul",[t("li",[e._v("added a way to ignore unreadable directories (via Finder::ignoreUnreadableDirs())")]),e._v(" "),t("li",[e._v("unified the way subfolders that are not executable are handled by always throwing an AccessDeniedException exception")])]),e._v(" "),t("h2",{attrs:{id:"_2-2-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-0","aria-hidden":"true"}},[e._v("#")]),e._v(" 2.2.0")]),e._v(" "),t("ul",[t("li",[e._v("added Finder::path() and Finder::notPath() methods")]),e._v(" "),t("li",[e._v("added finder adapters to improve performance on specific platforms")]),e._v(" "),t("li",[e._v("added support for wildcard characters (glob patterns) in the paths passed\nto Finder::in()")])]),e._v(" "),t("h2",{attrs:{id:"_2-1-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-0","aria-hidden":"true"}},[e._v("#")]),e._v(" 2.1.0")]),e._v(" "),t("ul",[t("li",[e._v("added Finder::sortByAccessedTime(), Finder::sortByChangedTime(), and\nFinder::sortByModifiedTime()")]),e._v(" "),t("li",[e._v("added Countable to Finder")]),e._v(" "),t("li",[e._v("added support for an array of directories as an argument to\nFinder::exclude()")]),e._v(" "),t("li",[e._v("added searching based on the file content via Finder::contains() and\nFinder::notContains()")]),e._v(" "),t("li",[e._v("added support for the != operator in the Comparator")]),e._v(" "),t("li",[e._v("[BC BREAK] filter expressions (used for file name and content) are no more\nconsidered as regexps but glob patterns when they are enclosed in '*' or '?'")])])])}],!1,null,null,null);a.default=d.exports}}]);