(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{345:function(e,t,r){"use strict";r.r(t);var a=r(0),s=Object(a.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),r("p",[e._v("In order to rebuild the parser, you need "),r("a",{attrs:{href:"https://github.com/moriyoshi/kmyacc-forked",target:"_blank",rel:"noopener noreferrer"}},[e._v("moriyoshi's fork of kmyacc"),r("OutboundLink")],1),e._v(".\nAfter you compiled/installed it, run the "),r("code",[e._v("rebuildParsers.php")]),e._v(" script.")]),e._v(" "),e._m(6)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"what-do-all-those-files-mean"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-do-all-those-files-mean","aria-hidden":"true"}},[this._v("#")]),this._v(" What do all those files mean?")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("code",[e._v("php5.y")]),e._v(":             PHP 5 grammar written in a pseudo language")]),e._v(" "),r("li",[r("code",[e._v("php7.y")]),e._v(":             PHP 7 grammar written in a pseudo language")]),e._v(" "),r("li",[r("code",[e._v("tokens.y")]),e._v(":           Tokens definition shared between PHP 5 and PHP 7 grammars")]),e._v(" "),r("li",[r("code",[e._v("parser.template")]),e._v(":    A "),r("code",[e._v("kmyacc")]),e._v(" parser prototype file for PHP")]),e._v(" "),r("li",[r("code",[e._v("tokens.template")]),e._v(":    A "),r("code",[e._v("kmyacc")]),e._v(" prototype file for the "),r("code",[e._v("Tokens")]),e._v(" class")]),e._v(" "),r("li",[r("code",[e._v("rebuildParsers.php")]),e._v(": Preprocesses the grammar and builds the parser using "),r("code",[e._v("kmyacc")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"phpy-pseudo-language"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#phpy-pseudo-language","aria-hidden":"true"}},[this._v("#")]),this._v(" .phpy pseudo language")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("code",[this._v(".y")]),this._v(" file is a normal grammer in "),t("code",[this._v("kmyacc")]),this._v(" ("),t("code",[this._v("yacc")]),this._v(") style, with some transformations\napplied to it:")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("Nodes are created using the syntax "),r("code",[e._v("Name[..., ...]")]),e._v(". This is transformed into\n"),r("code",[e._v("new Name(..., ..., attributes())")])]),e._v(" "),r("li",[e._v("Some function-like constructs are resolved (see "),r("code",[e._v("rebuildParsers.php")]),e._v(" for a list)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"building-the-parser"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#building-the-parser","aria-hidden":"true"}},[this._v("#")]),this._v(" Building the parser")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("By default only the "),r("code",[e._v("Parser.php")]),e._v(" is built. If you want to additionally emit debug symbols and create "),r("code",[e._v("y.output")]),e._v(", run the\nscript with "),r("code",[e._v("--debug")]),e._v(". If you want to retain the preprocessed grammar pass "),r("code",[e._v("--keep-tmp-grammar")]),e._v(".")])}],!1,null,null,null);t.default=s.exports}}]);